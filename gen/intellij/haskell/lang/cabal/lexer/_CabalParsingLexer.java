/* The following code was generated by JFlex 1.7.0 tweaked for IntelliJ platform */

package intellij.haskell.lang.cabal.lexer;

import java.util.regex.*;

import com.intellij.lexer.*;
import com.intellij.psi.tree.IElementType;

import intellij.haskell.lang.cabal.psi.CabalTypes;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>_CabalParsingLexer.flex</tt>
 */
public class _CabalParsingLexer implements FlexLexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;
  public static final int MAIN = 2;
  public static final int INDENT = 4;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1,  1,  2, 2
  };

  /** 
   * Translates characters to character classes
   * Chosen bits are [7, 7, 7]
   * Total runtime size is 1672 bytes
   */
  public static int ZZ_CMAP(int ch) {
    return ZZ_CMAP_A[(ZZ_CMAP_Y[ZZ_CMAP_Z[ch>>14]|((ch>>7)&0x7f)]<<7)|(ch&0x7f)];
  }

  /* The ZZ_CMAP_Z table has 68 entries */
  static final char ZZ_CMAP_Z[] = zzUnpackCMap(
    "\1\0\103\200");

  /* The ZZ_CMAP_Y table has 256 entries */
  static final char ZZ_CMAP_Y[] = zzUnpackCMap(
    "\1\0\1\1\1\2\77\1\1\3\275\1");

  /* The ZZ_CMAP_A table has 512 entries */
  static final char ZZ_CMAP_A[] = zzUnpackCMap(
    "\11\0\1\30\1\1\1\0\1\3\1\2\22\0\1\4\1\27\4\0\1\24\1\0\1\12\1\13\1\65\1\0\1"+
    "\26\1\10\1\6\1\0\12\7\1\11\1\0\1\23\1\20\1\21\2\0\1\31\1\53\1\50\1\62\1\43"+
    "\1\44\1\46\1\40\1\36\1\63\1\60\1\45\1\51\1\56\1\47\1\52\1\64\1\41\1\33\1\37"+
    "\1\42\1\61\1\34\1\55\1\54\1\5\1\14\1\0\1\15\1\22\1\5\1\0\1\31\1\53\1\50\1"+
    "\62\1\43\1\44\1\46\1\40\1\36\1\63\1\60\1\45\1\51\1\56\1\47\1\52\1\64\1\41"+
    "\1\33\1\37\1\42\1\61\1\34\1\55\1\54\1\5\1\16\1\25\1\17\262\0\2\35\115\0\1"+
    "\32\52\0\1\57\125\0");

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\3\0\1\1\1\2\2\1\1\3\2\4\1\2\1\5"+
    "\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15"+
    "\1\16\1\17\1\3\1\20\1\3\1\21\2\3\1\22"+
    "\1\23\1\24\1\5\1\3\2\5\1\3\22\5\1\25"+
    "\2\26\2\25\2\0\1\27\1\0\1\30\1\31\1\0"+
    "\1\32\1\33\1\34\2\35\2\5\4\0\4\5\1\0"+
    "\1\5\1\36\2\0\1\36\6\5\1\0\10\5\1\0"+
    "\4\5\2\37\10\5\1\0\11\5\1\0\1\5\1\7"+
    "\1\40\2\5\4\0\4\5\1\0\1\5\3\0\3\5"+
    "\1\41\1\5\1\0\2\5\1\0\4\5\1\0\7\5"+
    "\2\0\6\5\1\0\6\5\1\0\3\5\1\0\2\5"+
    "\1\0\3\5\1\42\3\5\1\0\2\5\1\0\1\5"+
    "\1\43\1\5\4\0\4\5\2\44\1\45\2\0\1\45"+
    "\2\5\1\46\1\0\1\5\1\47\1\0\4\5\2\50"+
    "\4\5\1\0\2\5\1\51\2\0\6\5\1\0\6\5"+
    "\1\0\2\5\1\0\1\5\1\0\2\5\1\0\3\5"+
    "\1\52\1\0\2\5\1\0\2\5\1\0\2\5\4\0"+
    "\4\5\2\0\2\5\2\0\2\5\1\0\3\5\1\0"+
    "\4\5\1\0\1\5\2\53\1\5\2\0\4\5\1\0"+
    "\4\5\1\0\6\5\2\0\3\5\1\0\1\5\1\0"+
    "\2\5\1\0\3\5\1\0\2\5\1\0\2\5\1\0"+
    "\1\5\1\54\1\0\1\55\2\0\1\5\1\55\2\5"+
    "\2\0\2\5\2\0\2\5\1\0\3\5\1\0\2\5"+
    "\1\0\2\5\1\0\2\5\2\0\2\5\1\0\2\5"+
    "\1\0\4\5\1\0\3\5\1\0\3\5\2\0\2\5"+
    "\1\56\1\0\1\5\1\0\1\5\1\57\2\0\4\5"+
    "\1\0\3\5\1\0\2\5\1\0\1\5\3\0\3\5"+
    "\2\0\2\5\2\0\2\5\1\0\3\5\1\0\1\5"+
    "\1\0\5\5\1\0\2\5\2\60\1\5\1\61\1\62"+
    "\1\61\1\62\1\0\1\5\1\0\1\5\1\0\6\5"+
    "\1\0\3\5\1\0\1\5\1\0\2\5\1\63\1\0"+
    "\1\63\1\5\1\0\1\5\1\0\1\5\3\0\5\5"+
    "\2\64\1\0\1\5\1\0\1\5\1\0\1\5\1\65"+
    "\1\0\1\5\2\0\1\66\2\5\1\66\2\0\1\67"+
    "\2\5\1\67\2\0\2\5\1\0\1\5\1\70\1\5"+
    "\1\0\1\5\1\0\2\5\1\0\3\5\1\0\2\5"+
    "\1\0\2\5\1\0\1\5\2\71\1\0\1\5\1\0"+
    "\1\5\1\0\5\5\1\0\1\5\1\72\1\5\1\0"+
    "\1\5\1\0\1\5\1\0\1\5\1\0\1\5\1\0"+
    "\1\5\1\0\1\5\4\0\6\5\1\0\1\5\2\73"+
    "\1\0\2\5\1\0\1\5\1\74\1\0\1\74\1\5"+
    "\2\0\2\5\2\0\2\5\1\0\2\5\1\0\1\5"+
    "\1\0\2\5\1\0\3\5\1\0\2\5\1\0\1\5"+
    "\1\0\1\5\1\0\1\5\1\0\1\5\1\0\1\5"+
    "\1\0\5\5\2\75\1\5\2\76\1\0\1\5\1\0"+
    "\1\5\1\0\1\5\1\0\1\5\1\0\1\5\3\0"+
    "\1\77\3\5\1\77\1\5\2\100\1\0\1\5\1\0"+
    "\3\5\1\0\1\5\1\0\1\5\2\0\2\5\1\101"+
    "\1\0\1\101\1\5\1\0\2\5\1\0\1\5\1\0"+
    "\2\5\2\0\2\5\1\0\2\5\2\102\1\103\1\0"+
    "\1\5\2\104\1\0\1\5\2\105\1\0\1\5\1\0"+
    "\5\5\1\0\1\5\2\106\1\0\1\5\2\107\1\0"+
    "\1\5\1\0\1\5\1\0\1\110\1\0\1\5\1\110"+
    "\2\5\2\111\1\0\3\5\2\112\1\0\1\5\2\0"+
    "\2\5\2\113\1\0\2\5\1\0\1\5\1\0\2\5"+
    "\2\0\2\5\1\0\2\5\1\0\1\5\1\0\1\5"+
    "\1\0\1\5\2\114\4\5\1\0\1\5\2\115\2\116"+
    "\1\0\1\5\1\117\1\0\1\117\1\5\2\120\2\121"+
    "\2\5\1\0\1\5\1\0\1\122\1\5\1\122\1\0"+
    "\2\5\1\0\1\5\1\0\1\5\1\0\1\5\2\0"+
    "\2\5\1\0\1\5\1\0\1\5\1\0\1\5\2\123"+
    "\1\0\2\5\1\0\3\5\1\0\1\5\1\0\1\5"+
    "\1\0\3\5\1\0\1\5\1\0\1\5\2\124\1\5"+
    "\1\0\1\5\1\0\1\5\1\0\1\5\2\0\2\5"+
    "\1\0\1\5\1\0\1\5\1\0\1\5\2\125\1\0"+
    "\1\5\1\0\1\5\1\0\2\5\2\126\2\127\1\0"+
    "\1\5\2\130\2\5\1\0\1\5\1\0\1\5\2\131"+
    "\1\5\1\0\1\5\1\0\1\5\1\0\1\5\1\132"+
    "\1\0\1\132\1\5\1\0\1\5\1\0\1\5\1\0"+
    "\1\5\1\0\1\5\1\0\1\5\1\0\2\5\1\0"+
    "\1\5\1\0\2\5\1\0\1\5\1\0\2\5\1\0"+
    "\1\5\1\0\1\5\2\133\2\134\1\0\1\5\2\135"+
    "\2\136\1\0\1\5\1\0\1\5\1\0\1\5\2\137"+
    "\1\0\1\5\1\0\2\5\1\0\1\5\2\140\1\5"+
    "\1\0\1\5\1\0\1\5\1\0\1\5\1\0\1\5"+
    "\2\141\2\142\1\0\1\5\1\0\1\5\1\143\2\144"+
    "\1\5\1\0\1\5\1\0\1\5\1\0\1\5\1\0"+
    "\1\5\2\145\1\0\1\5\2\146\1\0\1\5\2\147"+
    "\1\0\1\5\2\150\2\151\2\152\1\0\1\5\2\153";

  private static int [] zzUnpackAction() {
    int [] result = new int[995];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\66\0\154\0\242\0\330\0\u010e\0\u0144\0\242"+
    "\0\u017a\0\u01b0\0\u01e6\0\u021c\0\242\0\u0252\0\242\0\242"+
    "\0\242\0\242\0\242\0\242\0\242\0\242\0\u0288\0\u02be"+
    "\0\u02f4\0\u032a\0\u0360\0\u0396\0\242\0\242\0\u01e6\0\u03cc"+
    "\0\u0402\0\u0438\0\u046e\0\u04a4\0\u04da\0\u0510\0\u0546\0\u057c"+
    "\0\u05b2\0\u05e8\0\u061e\0\u0654\0\u068a\0\u06c0\0\u06f6\0\u072c"+
    "\0\u0762\0\u0798\0\u07ce\0\u0804\0\u083a\0\u0870\0\242\0\242"+
    "\0\u08a6\0\154\0\u0144\0\u010e\0\u0144\0\u08dc\0\u0912\0\242"+
    "\0\242\0\u0948\0\242\0\242\0\242\0\242\0\u021c\0\u097e"+
    "\0\u09b4\0\u09ea\0\u0a20\0\u0a56\0\u0a8c\0\u0ac2\0\u0af8\0\u0b2e"+
    "\0\u0b64\0\u0b9a\0\u0bd0\0\242\0\u0c06\0\u0c3c\0\u021c\0\u0c72"+
    "\0\u0ca8\0\u0cde\0\u0d14\0\u0d4a\0\u0d80\0\u0db6\0\u0dec\0\u0e22"+
    "\0\u0e58\0\u0e8e\0\u0ec4\0\u0efa\0\u0f30\0\u0f66\0\u0f9c\0\u0fd2"+
    "\0\u1008\0\u103e\0\u1074\0\242\0\u021c\0\u10aa\0\u10e0\0\u1116"+
    "\0\u114c\0\u1182\0\u11b8\0\u11ee\0\u1224\0\u125a\0\u1290\0\u12c6"+
    "\0\u12fc\0\u1332\0\u1368\0\u139e\0\u13d4\0\u140a\0\u1440\0\u1476"+
    "\0\u14ac\0\242\0\242\0\u14e2\0\u1518\0\u154e\0\u1584\0\u15ba"+
    "\0\u15f0\0\u1626\0\u165c\0\u1692\0\u16c8\0\u16fe\0\u1734\0\u176a"+
    "\0\u17a0\0\u17d6\0\u180c\0\u1842\0\u1878\0\u021c\0\u18ae\0\u18e4"+
    "\0\u191a\0\u1950\0\u1986\0\u19bc\0\u19f2\0\u1a28\0\u1a5e\0\u1a94"+
    "\0\u1aca\0\u1b00\0\u1b36\0\u1b6c\0\u1ba2\0\u1bd8\0\u1c0e\0\u1c44"+
    "\0\u1c7a\0\u1cb0\0\u1ce6\0\u1d1c\0\u1d52\0\u1d88\0\u1dbe\0\u1df4"+
    "\0\u1e2a\0\u1e60\0\u1e96\0\u1ecc\0\u1f02\0\u1f38\0\u1f6e\0\u1fa4"+
    "\0\u1fda\0\u2010\0\u2046\0\u207c\0\u20b2\0\u20e8\0\u211e\0\u2154"+
    "\0\u218a\0\u21c0\0\u21f6\0\u222c\0\u2262\0\u2298\0\u22ce\0\u2304"+
    "\0\u233a\0\u2370\0\u021c\0\u23a6\0\u23dc\0\u2412\0\u2448\0\u247e"+
    "\0\u24b4\0\u24ea\0\u2520\0\u2556\0\242\0\u021c\0\242\0\u258c"+
    "\0\u25c2\0\u021c\0\u25f8\0\u262e\0\u021c\0\u2664\0\u269a\0\u021c"+
    "\0\u26d0\0\u2706\0\u273c\0\u2772\0\u27a8\0\242\0\u021c\0\u27de"+
    "\0\u2814\0\u284a\0\u2880\0\u28b6\0\u28ec\0\u2922\0\u021c\0\u2958"+
    "\0\u298e\0\u29c4\0\u29fa\0\u2a30\0\u2a66\0\u2a9c\0\u2ad2\0\u2b08"+
    "\0\u2b3e\0\u2b74\0\u2baa\0\u2be0\0\u2c16\0\u2c4c\0\u2c82\0\u2cb8"+
    "\0\u2cee\0\u2d24\0\u2d5a\0\u2d90\0\u2dc6\0\u2dfc\0\u2e32\0\u2e68"+
    "\0\u2e9e\0\u2ed4\0\u021c\0\u2f0a\0\u2f40\0\u2f76\0\u2fac\0\u2fe2"+
    "\0\u3018\0\u304e\0\u3084\0\u30ba\0\u30f0\0\u3126\0\u315c\0\u3192"+
    "\0\u31c8\0\u31fe\0\u3234\0\u326a\0\u32a0\0\u32d6\0\u330c\0\u3342"+
    "\0\u3378\0\u33ae\0\u33e4\0\u341a\0\u3450\0\u3486\0\u34bc\0\u34f2"+
    "\0\u3528\0\u355e\0\u3594\0\u35ca\0\u3600\0\u3636\0\u366c\0\242"+
    "\0\u021c\0\u36a2\0\u36d8\0\u370e\0\u3744\0\u377a\0\u37b0\0\u37e6"+
    "\0\u381c\0\u3852\0\u3888\0\u38be\0\u38f4\0\u392a\0\u3960\0\u3996"+
    "\0\u39cc\0\u3a02\0\u3a38\0\u3a6e\0\u3aa4\0\u3ada\0\u3b10\0\u3b46"+
    "\0\u3b7c\0\u3bb2\0\u3be8\0\u3c1e\0\u3c54\0\u3c8a\0\u3cc0\0\u3cf6"+
    "\0\u3d2c\0\u3d62\0\u3d98\0\u3dce\0\u3e04\0\u3e3a\0\u3e70\0\u3ea6"+
    "\0\u3edc\0\u3f12\0\u021c\0\u3f48\0\242\0\u3f7e\0\u3fb4\0\u3fea"+
    "\0\u021c\0\u4020\0\u4056\0\u408c\0\u40c2\0\u40f8\0\u412e\0\u4164"+
    "\0\u419a\0\u41d0\0\u4206\0\u423c\0\u4272\0\u42a8\0\u42de\0\u4314"+
    "\0\u434a\0\u4380\0\u43b6\0\u43ec\0\u4422\0\u4458\0\u448e\0\u44c4"+
    "\0\u44fa\0\u4530\0\u4566\0\u459c\0\u45d2\0\u4608\0\u463e\0\u4674"+
    "\0\u46aa\0\u46e0\0\u4716\0\u474c\0\u4782\0\u47b8\0\u47ee\0\u4824"+
    "\0\u485a\0\u4890\0\u48c6\0\u48fc\0\u4932\0\u4968\0\u499e\0\u49d4"+
    "\0\u021c\0\u4a0a\0\u4a40\0\u4a76\0\u4aac\0\u021c\0\u4ae2\0\u4b18"+
    "\0\u4b4e\0\u4b84\0\u4bba\0\u4bf0\0\u4c26\0\u4c5c\0\u4c92\0\u4cc8"+
    "\0\u4cfe\0\u4d34\0\u4d6a\0\u4da0\0\u4dd6\0\u4e0c\0\u4e42\0\u4e78"+
    "\0\u4eae\0\u4ee4\0\u4f1a\0\u4f50\0\u4f86\0\u4fbc\0\u4ff2\0\u5028"+
    "\0\u505e\0\u5094\0\u50ca\0\u5100\0\u5136\0\u516c\0\u51a2\0\u51d8"+
    "\0\u520e\0\u5244\0\u527a\0\u52b0\0\u52e6\0\u531c\0\u5352\0\u5388"+
    "\0\u53be\0\u53f4\0\u542a\0\u5460\0\u5496\0\u54cc\0\242\0\u5502"+
    "\0\u021c\0\u5538\0\u556e\0\u55a4\0\u55da\0\u5610\0\u5646\0\u567c"+
    "\0\u56b2\0\u56e8\0\u571e\0\u5754\0\u578a\0\u57c0\0\u57f6\0\u582c"+
    "\0\u5862\0\u5898\0\u58ce\0\u5904\0\u593a\0\242\0\u5970\0\u021c"+
    "\0\u59a6\0\u59dc\0\u5a12\0\u5a48\0\u5a7e\0\u5ab4\0\u5aea\0\u5b20"+
    "\0\u5b56\0\u5b8c\0\u5bc2\0\u5bf8\0\u5c2e\0\242\0\u021c\0\u5c64"+
    "\0\u5c9a\0\u5cd0\0\u5d06\0\u5d3c\0\u5d72\0\u5da8\0\u5dde\0\u5e14"+
    "\0\u5e4a\0\u5e80\0\242\0\u5eb6\0\u5eec\0\u021c\0\u5f22\0\u5f58"+
    "\0\242\0\u5f8e\0\u5fc4\0\u021c\0\u5ffa\0\u6030\0\u6066\0\u609c"+
    "\0\u60d2\0\u6108\0\u021c\0\u613e\0\u6174\0\u61aa\0\u61e0\0\u6216"+
    "\0\u624c\0\u6282\0\u62b8\0\u62ee\0\u6324\0\u635a\0\u6390\0\u63c6"+
    "\0\u63fc\0\u6432\0\u6468\0\u649e\0\u64d4\0\242\0\u021c\0\u650a"+
    "\0\u6540\0\u6576\0\u65ac\0\u65e2\0\u6618\0\u664e\0\u6684\0\u66ba"+
    "\0\u66f0\0\u6726\0\u675c\0\u021c\0\u6792\0\u67c8\0\u67fe\0\u6834"+
    "\0\u686a\0\u68a0\0\u68d6\0\u690c\0\u6942\0\u6978\0\u69ae\0\u69e4"+
    "\0\u6a1a\0\u6a50\0\u6a86\0\u6abc\0\u6af2\0\u6b28\0\u6b5e\0\u6b94"+
    "\0\u6bca\0\u6c00\0\u6c36\0\u6c6c\0\u6ca2\0\242\0\u021c\0\u6cd8"+
    "\0\u6d0e\0\u6d44\0\u6d7a\0\u6db0\0\242\0\u6de6\0\u021c\0\u6e1c"+
    "\0\u6e52\0\u6e88\0\u6ebe\0\u6ef4\0\u6f2a\0\u6f60\0\u6f96\0\u6fcc"+
    "\0\u7002\0\u7038\0\u706e\0\u70a4\0\u70da\0\u7110\0\u7146\0\u717c"+
    "\0\u71b2\0\u71e8\0\u721e\0\u7254\0\u728a\0\u72c0\0\u72f6\0\u732c"+
    "\0\u7362\0\u7398\0\u73ce\0\u7404\0\u743a\0\u7470\0\u74a6\0\u74dc"+
    "\0\u7512\0\u7548\0\u757e\0\u75b4\0\u75ea\0\u7620\0\u7656\0\242"+
    "\0\u021c\0\u768c\0\242\0\u021c\0\u76c2\0\u76f8\0\u772e\0\u7764"+
    "\0\u779a\0\u77d0\0\u7806\0\u783c\0\u7872\0\u78a8\0\u78de\0\u7914"+
    "\0\u794a\0\242\0\u7980\0\u79b6\0\u79ec\0\u021c\0\u7a22\0\242"+
    "\0\u021c\0\u7a58\0\u7a8e\0\u7ac4\0\u7afa\0\u7b30\0\u7b66\0\u7b9c"+
    "\0\u7bd2\0\u7c08\0\u7c3e\0\u7c74\0\u7caa\0\u7ce0\0\u7d16\0\242"+
    "\0\u7d4c\0\u021c\0\u7d82\0\u7db8\0\u7dee\0\u7e24\0\u7e5a\0\u7e90"+
    "\0\u7ec6\0\u7efc\0\u7f32\0\u7f68\0\u7f9e\0\u7fd4\0\u800a\0\u8040"+
    "\0\u8076\0\u80ac\0\242\0\u021c\0\u021c\0\u80e2\0\u8118\0\242"+
    "\0\u021c\0\u814e\0\u8184\0\242\0\u021c\0\u81ba\0\u81f0\0\u8226"+
    "\0\u825c\0\u8292\0\u82c8\0\u82fe\0\u8334\0\u836a\0\u83a0\0\242"+
    "\0\u021c\0\u83d6\0\u840c\0\242\0\u021c\0\u8442\0\u8478\0\u84ae"+
    "\0\u84e4\0\u851a\0\242\0\u8550\0\u8586\0\u021c\0\u85bc\0\u85f2"+
    "\0\242\0\u021c\0\u8628\0\u865e\0\u8694\0\u86ca\0\242\0\u021c"+
    "\0\u8700\0\u8736\0\u876c\0\u87a2\0\u87d8\0\u880e\0\242\0\u021c"+
    "\0\u8844\0\u887a\0\u88b0\0\u88e6\0\u891c\0\u8952\0\u8988\0\u89be"+
    "\0\u89f4\0\u8a2a\0\u8a60\0\u8a96\0\u8acc\0\u8b02\0\u8b38\0\u8b6e"+
    "\0\u8ba4\0\u8bda\0\u8c10\0\u8c46\0\u8c7c\0\242\0\u021c\0\u8cb2"+
    "\0\u8ce8\0\u8d1e\0\u8d54\0\u8d8a\0\u8dc0\0\242\0\u021c\0\242"+
    "\0\u021c\0\u8df6\0\u8e2c\0\242\0\u8e62\0\u021c\0\u8e98\0\242"+
    "\0\u021c\0\242\0\u021c\0\u8ece\0\u8f04\0\u8f3a\0\u8f70\0\u8fa6"+
    "\0\242\0\u8fdc\0\u021c\0\u9012\0\u9048\0\u907e\0\u90b4\0\u90ea"+
    "\0\u9120\0\u9156\0\u918c\0\u91c2\0\u91f8\0\u922e\0\u9264\0\u929a"+
    "\0\u92d0\0\u9306\0\u933c\0\u9372\0\u93a8\0\u93de\0\u9414\0\u944a"+
    "\0\u9480\0\u94b6\0\u94ec\0\u9522\0\u9558\0\u958e\0\u95c4\0\u95fa"+
    "\0\u9630\0\u9666\0\u969c\0\u96d2\0\u9708\0\u973e\0\u9774\0\u97aa"+
    "\0\u97e0\0\u9816\0\u984c\0\u9882\0\u98b8\0\u98ee\0\u9924\0\u995a"+
    "\0\u9990\0\u99c6\0\u99fc\0\u9a32\0\u9a68\0\u9a9e\0\u9ad4\0\u9b0a"+
    "\0\u9b40\0\u9b76\0\u9bac\0\u9be2\0\u9c18\0\u9c4e\0\242\0\u021c"+
    "\0\u9c84\0\u9cba\0\u9cf0\0\u9d26\0\u9d5c\0\u9d92\0\u9dc8\0\242"+
    "\0\u021c\0\242\0\u021c\0\u9dfe\0\u9e34\0\242\0\u021c\0\u9e6a"+
    "\0\u9ea0\0\u9ed6\0\u9f0c\0\u9f42\0\u9f78\0\242\0\u021c\0\u9fae"+
    "\0\u9fe4\0\ua01a\0\ua050\0\ua086\0\ua0bc\0\ua0f2\0\242\0\ua128"+
    "\0\u021c\0\ua15e\0\ua194\0\ua1ca\0\ua200\0\ua236\0\ua26c\0\ua2a2"+
    "\0\ua2d8\0\ua30e\0\ua344\0\ua37a\0\ua3b0\0\ua3e6\0\ua41c\0\ua452"+
    "\0\ua488\0\ua4be\0\ua4f4\0\ua52a\0\ua560\0\ua596\0\ua5cc\0\ua602"+
    "\0\ua638\0\ua66e\0\ua6a4\0\ua6da\0\ua710\0\242\0\u021c\0\242"+
    "\0\u021c\0\ua746\0\ua77c\0\242\0\u021c\0\242\0\u021c\0\ua7b2"+
    "\0\ua7e8\0\ua81e\0\ua854\0\ua88a\0\ua8c0\0\242\0\u021c\0\ua8f6"+
    "\0\ua92c\0\ua962\0\ua998\0\ua9ce\0\uaa04\0\uaa3a\0\242\0\u021c"+
    "\0\uaa70\0\uaaa6\0\uaadc\0\uab12\0\uab48\0\uab7e\0\uabb4\0\uabea"+
    "\0\uac20\0\242\0\u021c\0\242\0\u021c\0\uac56\0\uac8c\0\uacc2"+
    "\0\uacf8\0\u021c\0\242\0\u021c\0\uad2e\0\uad64\0\uad9a\0\uadd0"+
    "\0\uae06\0\uae3c\0\uae72\0\uaea8\0\uaede\0\242\0\u021c\0\uaf14"+
    "\0\uaf4a\0\242\0\u021c\0\uaf80\0\uafb6\0\242\0\u021c\0\uafec"+
    "\0\ub022\0\242\0\u021c\0\242\0\u021c\0\242\0\u021c\0\ub058"+
    "\0\ub08e\0\242\0\u021c";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[995];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\4\2\5\2\6\3\4\1\7\17\4\1\6\35\4"+
    "\1\10\1\11\1\12\2\13\1\14\1\15\1\16\1\17"+
    "\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27"+
    "\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37"+
    "\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47"+
    "\1\50\1\14\1\51\1\52\1\53\1\54\1\55\1\56"+
    "\1\57\1\60\1\61\1\14\1\62\1\63\1\10\1\14"+
    "\1\64\1\65\1\66\1\14\1\10\1\67\1\70\1\71"+
    "\1\72\1\3\3\67\1\73\17\67\1\72\35\67\67\0"+
    "\2\5\66\0\2\74\3\0\1\75\17\0\1\74\45\0"+
    "\1\76\60\0\2\11\23\0\1\11\36\0\1\11\1\0"+
    "\2\11\23\0\1\11\40\0\2\13\23\0\1\13\42\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\21\14\1\0"+
    "\5\14\7\0\1\77\1\16\76\0\1\100\65\0\1\101"+
    "\66\0\1\102\64\0\1\103\71\0\1\104\66\0\1\105"+
    "\45\0\4\14\20\0\1\14\1\106\1\107\1\14\1\0"+
    "\3\14\1\110\1\111\14\14\1\0\5\14\40\0\1\112"+
    "\2\0\1\113\4\0\1\114\4\0\1\115\16\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\1\14\1\116\2\14"+
    "\1\117\4\14\1\120\4\14\1\121\2\14\1\0\5\14"+
    "\6\0\4\14\20\0\1\14\1\0\2\14\1\122\1\123"+
    "\20\14\1\0\5\14\45\0\1\124\4\0\1\125\4\0"+
    "\1\126\14\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\6\14\1\127\4\14\1\130\4\14\1\131\1\0\5\14"+
    "\6\0\4\14\20\0\1\132\1\0\2\14\1\0\3\14"+
    "\1\133\1\14\1\134\10\14\1\135\2\14\1\0\5\14"+
    "\6\0\4\14\20\0\1\14\1\136\1\137\1\14\1\0"+
    "\11\14\1\140\7\14\1\0\5\14\6\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\5\14\1\141\13\14\1\0"+
    "\5\14\6\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\7\14\1\142\7\14\1\143\1\14\1\0\5\14\6\0"+
    "\4\14\20\0\1\144\1\0\2\14\1\0\3\14\1\145"+
    "\3\14\1\146\11\14\1\0\5\14\6\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\147\1\150\10\14\1\151\7\14"+
    "\1\0\2\14\1\152\2\14\6\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\2\14\1\153\16\14\1\0\5\14"+
    "\6\0\4\14\20\0\1\14\1\154\1\155\1\14\1\0"+
    "\1\14\1\156\17\14\1\0\5\14\6\0\3\14\1\157"+
    "\20\0\1\160\1\0\2\14\1\0\11\14\1\161\1\162"+
    "\1\14\1\163\4\14\1\0\5\14\6\0\4\14\20\0"+
    "\1\164\1\0\2\14\1\0\21\14\1\0\5\14\6\0"+
    "\4\14\20\0\1\165\1\0\2\14\1\0\21\14\1\166"+
    "\1\167\4\14\6\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\3\14\1\170\1\171\1\172\13\14\1\0\5\14"+
    "\6\0\3\14\1\173\20\0\1\14\1\0\2\14\1\0"+
    "\21\14\1\0\5\14\6\0\4\14\20\0\1\174\1\0"+
    "\2\14\1\0\21\14\1\0\5\14\6\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\5\14\1\175\13\14\1\0"+
    "\5\14\6\0\4\14\20\0\1\176\1\0\2\14\1\0"+
    "\5\14\1\177\13\14\1\0\5\14\6\0\4\14\20\0"+
    "\1\14\1\200\1\201\1\14\1\0\21\14\1\0\5\14"+
    "\2\0\1\70\64\0\1\76\2\0\63\76\7\0\1\16"+
    "\55\0\1\202\20\0\1\203\52\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\12\14\1\204\6\14\1\0\5\14"+
    "\6\0\4\14\20\0\1\14\1\0\2\14\1\0\1\14"+
    "\1\205\17\14\1\0\5\14\32\0\1\206\107\0\1\207"+
    "\54\0\1\210\101\0\1\211\14\0\4\14\20\0\1\212"+
    "\1\0\2\14\1\0\21\14\1\0\5\14\6\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\15\14\1\213\3\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\4\14\1\214\14\14\1\0\5\14\6\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\20\14\1\215\1\0"+
    "\5\14\40\0\1\216\33\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\1\14\1\217\17\14\1\0\5\14\53\0"+
    "\1\220\45\0\2\221\14\0\1\222\22\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\14\14\1\223\4\14\1\0"+
    "\5\14\6\0\4\14\20\0\1\14\1\221\1\224\1\14"+
    "\1\0\12\14\1\225\6\14\1\0\5\14\6\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\10\14\1\226\10\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\4\14\1\227\14\14\1\0\5\14\6\0\4\14"+
    "\20\0\1\14\1\230\1\231\1\14\1\0\21\14\1\0"+
    "\5\14\6\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\14\14\1\232\4\14\1\0\5\14\11\0\1\233\62\0"+
    "\3\14\1\234\20\0\1\14\1\0\2\14\1\0\21\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\13\14\1\235\5\14\1\0\5\14\6\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\5\14\1\236\13\14"+
    "\1\0\4\14\1\237\6\0\4\14\20\0\1\14\1\240"+
    "\1\241\1\14\1\0\21\14\1\0\5\14\6\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\1\14\1\242\3\14"+
    "\1\243\6\14\1\244\4\14\1\0\5\14\6\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\7\14\1\245\11\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\246\1\0\2\14"+
    "\1\0\21\14\1\0\5\14\6\0\4\14\20\0\1\247"+
    "\1\0\2\14\1\0\21\14\1\0\5\14\51\0\1\250"+
    "\2\0\1\251\17\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\12\14\1\252\2\14\1\253\3\14\1\0\5\14"+
    "\6\0\4\14\20\0\1\14\1\0\2\14\1\0\12\14"+
    "\1\254\6\14\1\0\5\14\6\0\3\14\1\255\20\0"+
    "\1\14\1\0\2\14\1\0\21\14\1\0\5\14\6\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\12\14\1\256"+
    "\6\14\1\0\5\14\6\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\2\14\1\257\16\14\1\0\5\14\6\0"+
    "\4\14\20\0\1\14\1\260\1\261\1\14\1\0\21\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\1\14\1\262\13\14\1\263\3\14\1\0\5\14"+
    "\6\0\4\14\20\0\1\14\1\0\2\14\1\0\14\14"+
    "\1\264\4\14\1\0\5\14\6\0\3\14\1\265\20\0"+
    "\1\14\1\0\2\14\1\0\21\14\1\0\5\14\6\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\14\14\1\266"+
    "\4\14\1\0\5\14\6\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\267\1\270\17\14\1\271\1\0\5\14\6\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\12\14\1\272"+
    "\6\14\1\0\5\14\47\0\1\273\24\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\10\14\1\274\10\14\1\0"+
    "\5\14\6\0\4\14\20\0\1\275\1\0\2\14\1\0"+
    "\21\14\1\0\5\14\6\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\276\1\277\7\14\1\300\10\14\1\0\5\14"+
    "\6\0\4\14\20\0\1\14\1\0\2\14\1\0\20\14"+
    "\1\301\1\0\5\14\6\0\1\302\3\14\20\0\1\302"+
    "\1\0\2\302\1\0\21\302\1\0\5\302\6\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\13\14\1\303\5\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\3\14\1\304\15\14\1\0\5\14\6\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\1\14\1\305\17\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\14\1\306\1\307"+
    "\1\14\1\0\6\14\1\310\12\14\1\0\5\14\11\0"+
    "\1\311\62\0\3\14\1\312\20\0\1\14\1\0\2\14"+
    "\1\0\21\14\1\0\5\14\6\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\2\14\1\313\16\14\1\0\5\14"+
    "\6\0\4\14\20\0\1\14\1\0\2\14\1\0\2\14"+
    "\1\314\16\14\1\0\5\14\54\0\1\315\74\0\1\316"+
    "\44\0\1\317\73\0\1\320\23\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\15\14\1\321\3\14\1\0\5\14"+
    "\6\0\4\14\20\0\1\14\1\0\2\14\1\0\21\14"+
    "\1\0\2\14\1\322\2\14\6\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\3\14\1\323\15\14\1\0\5\14"+
    "\6\0\4\14\20\0\1\14\1\0\2\14\1\0\11\14"+
    "\1\324\7\14\1\0\5\14\41\0\1\325\32\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\2\14\1\326\16\14"+
    "\1\0\5\14\46\0\1\327\57\0\1\330\73\0\1\331"+
    "\25\0\4\14\20\0\1\14\1\0\2\14\1\0\7\14"+
    "\1\332\11\14\1\0\5\14\6\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\1\14\1\333\17\14\1\0\5\14"+
    "\6\0\4\14\20\0\1\14\1\0\2\14\1\0\7\14"+
    "\1\334\11\14\1\0\5\14\6\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\5\14\1\335\13\14\1\0\5\14"+
    "\40\0\1\336\33\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\1\14\1\337\17\14\1\0\5\14\6\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\5\14\1\340\13\14"+
    "\1\0\5\14\33\0\2\341\37\0\4\14\20\0\1\14"+
    "\1\341\1\342\1\14\1\0\21\14\1\0\5\14\6\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\5\14\1\343"+
    "\13\14\1\0\5\14\6\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\17\14\1\344\1\14\1\0\5\14\6\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\4\14\1\345"+
    "\14\14\1\0\5\14\44\0\1\346\27\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\5\14\1\347\13\14\1\0"+
    "\5\14\6\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\3\14\1\350\1\14\1\351\13\14\1\0\5\14\6\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\12\14\1\352"+
    "\6\14\1\0\5\14\6\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\11\14\1\353\7\14\1\0\5\14\6\0"+
    "\4\14\20\0\1\14\1\354\1\355\1\14\1\0\21\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\13\14\1\356\5\14\1\0\5\14\6\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\10\14\1\357\10\14"+
    "\1\0\5\14\44\0\1\360\63\0\1\361\31\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\5\14\1\362\13\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\3\14\1\363\15\14\1\0\5\14\6\0\4\14"+
    "\20\0\1\364\1\0\2\14\1\0\21\14\1\0\5\14"+
    "\6\0\4\14\20\0\1\14\1\0\2\14\1\0\11\14"+
    "\1\365\7\14\1\0\5\14\6\0\3\14\1\366\20\0"+
    "\1\14\1\0\2\14\1\0\21\14\1\0\5\14\6\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\5\14\1\367"+
    "\13\14\1\0\5\14\50\0\1\370\23\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\11\14\1\371\7\14\1\0"+
    "\5\14\6\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\5\14\1\372\13\14\1\0\5\14\6\0\4\14\20\0"+
    "\1\373\1\0\2\14\1\0\21\14\1\0\5\14\6\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\16\14\1\374"+
    "\2\14\1\0\5\14\6\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\11\14\1\375\7\14\1\0\5\14\6\0"+
    "\3\14\1\376\20\0\1\14\1\0\2\14\1\0\21\14"+
    "\1\0\5\14\57\0\1\377\14\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\20\14\1\u0100\1\0\5\14\6\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\4\14\1\u0101"+
    "\14\14\1\0\5\14\6\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\21\14\1\u0102\1\u0103\4\14\51\0\1\u0104"+
    "\22\0\4\14\20\0\1\14\1\0\2\14\1\0\12\14"+
    "\1\u0105\6\14\1\0\5\14\6\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\20\14\1\u0106\1\0\5\14\46\0"+
    "\1\u0107\25\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\7\14\1\u0108\11\14\1\0\5\14\6\0\3\14\1\u0109"+
    "\20\0\1\14\1\0\2\14\1\0\21\14\1\0\5\14"+
    "\6\0\4\14\20\0\1\14\1\0\2\14\1\0\12\14"+
    "\1\u010a\6\14\1\0\5\14\6\0\4\302\20\0\1\302"+
    "\1\0\2\302\1\0\21\302\1\0\5\302\6\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\5\14\1\u010b\13\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\14\1\u010c\1\u010d"+
    "\1\14\1\0\21\14\1\0\5\14\6\0\4\14\20\0"+
    "\1\u010e\1\0\2\14\1\0\21\14\1\0\5\14\51\0"+
    "\1\u010f\22\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\12\14\1\u0110\6\14\1\0\5\14\6\0\4\14\20\0"+
    "\1\u0111\1\0\2\14\1\0\21\14\1\0\5\14\33\0"+
    "\2\u0112\37\0\4\14\20\0\1\14\1\u0112\1\u0113\1\14"+
    "\1\0\21\14\1\0\5\14\6\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\11\14\1\u0114\7\14\1\0\5\14"+
    "\36\0\2\u0115\64\0\2\u0116\77\0\1\u0117\67\0\1\u0118"+
    "\20\0\4\14\20\0\1\14\1\0\2\14\1\u0115\1\u0119"+
    "\20\14\1\0\5\14\6\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\u0116\1\u011a\20\14\1\0\5\14\6\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\12\14\1\u011b\6\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\14\14\1\u011c\4\14\1\0\5\14\32\0\1\u011d"+
    "\76\0\1\u011e\30\0\4\14\20\0\1\u011f\1\0\2\14"+
    "\1\0\21\14\1\0\5\14\6\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\4\14\1\u0120\14\14\1\0\5\14"+
    "\11\0\1\u0121\32\0\1\u0122\27\0\3\14\1\u0123\20\0"+
    "\1\14\1\0\2\14\1\0\5\14\1\u0124\13\14\1\0"+
    "\5\14\50\0\1\u0125\23\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\11\14\1\u0126\7\14\1\0\5\14\6\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\14\14\1\u0127"+
    "\4\14\1\0\5\14\6\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\14\14\1\u0128\4\14\1\0\5\14\6\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\u0129\1\u012a\20\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\u012b\1\0\2\14"+
    "\1\0\21\14\1\0\5\14\6\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\20\14\1\u012c\1\0\5\14\6\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\4\14\1\u012d"+
    "\14\14\1\0\5\14\6\0\4\14\20\0\1\14\1\u012e"+
    "\1\u012f\1\14\1\0\21\14\1\0\5\14\44\0\1\u0130"+
    "\27\0\4\14\20\0\1\14\1\0\2\14\1\0\5\14"+
    "\1\u0131\13\14\1\0\5\14\6\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\5\14\1\u0132\13\14\1\0\5\14"+
    "\57\0\1\u0133\40\0\1\u0134\41\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\20\14\1\u0135\1\0\5\14\6\0"+
    "\4\14\20\0\1\u0136\1\0\2\14\1\0\21\14\1\0"+
    "\5\14\6\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\1\14\1\u0137\17\14\1\0\5\14\6\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\14\14\1\u0138\4\14\1\0"+
    "\5\14\6\0\4\14\20\0\1\14\1\u0139\1\u013a\1\14"+
    "\1\0\11\14\1\u013b\2\14\1\u013c\4\14\1\0\5\14"+
    "\6\0\4\14\20\0\1\14\1\0\2\14\1\0\3\14"+
    "\1\u013d\15\14\1\0\5\14\43\0\1\u013e\30\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\4\14\1\u013f\14\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\10\14\1\u0140\10\14\1\0\5\14\6\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\7\14\1\u0141\11\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\3\14\1\u0142\15\14\1\0\5\14\6\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\14\14\1\u0143\4\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\11\14\1\u0144\7\14\1\0\5\14\11\0\1\u0145"+
    "\26\0\1\u0146\33\0\3\14\1\u0147\20\0\1\14\1\0"+
    "\2\14\1\0\1\14\1\u0148\17\14\1\0\5\14\6\0"+
    "\4\14\20\0\1\u0149\1\0\2\14\1\0\21\14\1\0"+
    "\5\14\32\0\1\u014a\41\0\4\14\20\0\1\u014b\1\0"+
    "\2\14\1\0\21\14\1\0\5\14\50\0\1\u014c\23\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\11\14\1\u014d"+
    "\7\14\1\0\5\14\6\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\12\14\1\u014e\6\14\1\0\5\14\63\0"+
    "\1\u014f\10\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\21\14\1\0\2\14\1\u0150\2\14\6\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\3\14\1\u0151\15\14\1\0"+
    "\5\14\6\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\2\14\1\u0152\16\14\1\0\5\14\36\0\2\u0153\34\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\u0153\1\u0154\20\14"+
    "\1\0\5\14\6\0\3\14\1\u0155\20\0\1\14\1\0"+
    "\2\14\1\0\21\14\1\0\5\14\42\0\1\u0156\31\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\3\14\1\u0157"+
    "\15\14\1\0\5\14\6\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\4\14\1\u0158\14\14\1\0\5\14\50\0"+
    "\1\u0159\23\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\11\14\1\u015a\7\14\1\0\5\14\6\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\3\14\1\u015b\15\14\1\0"+
    "\5\14\46\0\1\u015c\61\0\1\u015d\67\0\1\u015e\54\0"+
    "\2\u015f\37\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\7\14\1\u0160\11\14\1\0\5\14\6\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\3\14\1\u0161\15\14\1\0"+
    "\5\14\6\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\5\14\1\u0162\13\14\1\0\5\14\6\0\4\14\20\0"+
    "\1\14\1\u015f\1\u0163\1\14\1\0\21\14\1\0\5\14"+
    "\46\0\1\u0164\102\0\1\u0165\10\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\7\14\1\u0166\11\14\1\0\5\14"+
    "\6\0\4\14\20\0\1\14\1\0\2\14\1\0\21\14"+
    "\1\0\2\14\1\u0167\2\14\33\0\2\u0168\114\0\1\u0169"+
    "\10\0\4\14\20\0\1\14\1\u0168\1\u016a\1\14\1\0"+
    "\21\14\1\0\5\14\6\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\21\14\1\0\2\14\1\u016b\2\14\43\0"+
    "\1\u016c\30\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\4\14\1\u016d\14\14\1\0\5\14\6\0\4\14\20\0"+
    "\1\u016e\1\0\2\14\1\0\21\14\1\0\5\14\6\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\11\14\1\u016f"+
    "\7\14\1\0\5\14\42\0\1\u0170\31\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\3\14\1\u0171\15\14\1\0"+
    "\5\14\6\0\3\14\1\u0172\20\0\1\14\1\0\2\14"+
    "\1\0\21\14\1\0\5\14\6\0\4\14\20\0\1\14"+
    "\1\u0173\1\u0174\1\14\1\0\21\14\1\0\5\14\6\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\1\14\1\u0175"+
    "\17\14\1\0\5\14\44\0\1\u0176\27\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\5\14\1\u0177\13\14\1\0"+
    "\5\14\6\0\4\14\20\0\1\14\1\0\1\14\1\u0178"+
    "\1\0\21\14\1\0\5\14\33\0\2\u0179\73\0\1\u017a"+
    "\31\0\4\14\20\0\1\14\1\u0179\1\u017b\1\14\1\0"+
    "\21\14\1\0\5\14\6\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\3\14\1\u017c\15\14\1\0\5\14\6\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\u017d\1\u017e\20\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\1\14\1\u017f\17\14\1\0\5\14\41\0\1\u0180"+
    "\32\0\4\14\20\0\1\14\1\0\2\14\1\0\2\14"+
    "\1\u0181\16\14\1\0\5\14\6\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\14\14\1\u0182\4\14\1\0\5\14"+
    "\6\0\4\14\20\0\1\14\1\0\2\14\1\0\3\14"+
    "\1\u0183\15\14\1\0\5\14\6\0\3\14\1\u0184\20\0"+
    "\1\14\1\0\2\14\1\0\21\14\1\0\5\14\42\0"+
    "\1\u0185\31\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\3\14\1\u0186\15\14\1\0\5\14\6\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\11\14\1\u0187\7\14\1\0"+
    "\5\14\6\0\3\14\1\u0188\20\0\1\14\1\0\2\14"+
    "\1\0\21\14\1\0\5\14\6\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\u0189\1\u018a\20\14\1\0\5\14\6\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\1\14\1\u018b"+
    "\17\14\1\0\5\14\6\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\14\14\1\u018c\4\14\1\0\5\14\36\0"+
    "\2\u018d\60\0\1\u018e\41\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\u018d\1\u018f\20\14\1\0\5\14\6\0\4\14"+
    "\20\0\1\u0190\1\0\2\14\1\0\21\14\1\0\5\14"+
    "\6\0\4\14\20\0\1\14\1\0\2\14\1\0\7\14"+
    "\1\u0191\11\14\1\0\5\14\47\0\1\u0192\24\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\10\14\1\u0193\10\14"+
    "\1\0\5\14\57\0\1\u0194\14\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\20\14\1\u0195\1\0\5\14\6\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\2\14\1\u0196"+
    "\16\14\1\0\5\14\11\0\1\u0197\20\0\1\u0198\41\0"+
    "\3\14\1\u0199\20\0\1\u019a\1\0\2\14\1\0\21\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\5\14\1\u019b\13\14\1\0\5\14\6\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\13\14\1\u019c\5\14"+
    "\1\0\5\14\50\0\1\u019d\23\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\11\14\1\u019e\7\14\1\0\5\14"+
    "\6\0\4\14\20\0\1\14\1\0\2\14\1\0\6\14"+
    "\1\u019f\12\14\1\0\2\14\1\u01a0\2\14\36\0\2\u01a1"+
    "\34\0\4\14\20\0\1\14\1\0\2\14\1\u01a1\1\u01a2"+
    "\20\14\1\0\5\14\6\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\7\14\1\u01a3\11\14\1\0\5\14\43\0"+
    "\1\u01a4\30\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\4\14\1\u01a5\14\14\1\0\5\14\36\0\2\u01a6\37\0"+
    "\1\u01a7\112\0\2\u01a8\34\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\u01a6\1\u01a9\20\14\1\0\5\14\6\0\3\14"+
    "\1\u01aa\20\0\1\14\1\0\2\14\1\0\21\14\1\0"+
    "\5\14\6\0\4\14\20\0\1\14\1\0\2\14\1\u01a8"+
    "\1\u01ab\20\14\1\0\5\14\46\0\1\u01ac\63\0\1\u01ad"+
    "\27\0\4\14\20\0\1\14\1\0\2\14\1\0\7\14"+
    "\1\u01ae\11\14\1\0\5\14\6\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\5\14\1\u01af\13\14\1\0\5\14"+
    "\43\0\1\u01b0\33\0\1\u01b1\62\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\4\14\1\u01b2\14\14\1\0\5\14"+
    "\6\0\3\14\1\u01b3\20\0\1\14\1\0\2\14\1\0"+
    "\21\14\1\0\5\14\42\0\1\u01b4\31\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\3\14\1\u01b5\15\14\1\0"+
    "\5\14\6\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\10\14\1\u01b6\10\14\1\0\5\14\6\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\3\14\1\u01b7\15\14\1\0"+
    "\5\14\44\0\1\u01b8\27\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\5\14\1\u01b9\13\14\1\0\5\14\6\0"+
    "\4\14\20\0\1\14\1\u01ba\1\u01bb\1\14\1\0\1\14"+
    "\1\u01bc\5\14\1\u01bd\1\u01be\10\14\1\0\2\14\1\u01bf"+
    "\2\14\36\0\2\u01c0\34\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\u01c0\1\u01c1\20\14\1\0\5\14\6\0\4\14"+
    "\20\0\1\u01c2\1\0\2\14\1\0\21\14\1\0\5\14"+
    "\63\0\1\u01c3\10\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\21\14\1\0\2\14\1\u01c4\2\14\6\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\11\14\1\u01c5\7\14"+
    "\1\0\5\14\44\0\1\u01c6\76\0\1\u01c7\16\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\5\14\1\u01c8\13\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\16\14\1\u01c9\2\14\1\0\5\14\50\0\1\u01ca"+
    "\23\0\4\14\20\0\1\14\1\0\2\14\1\0\11\14"+
    "\1\u01cb\7\14\1\0\5\14\6\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\u01cc\1\u01cd\20\14\1\0\5\14\32\0"+
    "\1\u01ce\41\0\4\14\20\0\1\u01cf\1\0\2\14\1\0"+
    "\21\14\1\0\5\14\6\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\1\14\1\u01d0\17\14\1\0\5\14\6\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\11\14\1\u01d1"+
    "\7\14\1\0\5\14\6\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\5\14\1\u01d2\1\14\1\u01d3\3\14\1\u01d4"+
    "\5\14\1\0\5\14\51\0\1\u01d5\22\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\12\14\1\u01d6\6\14\1\0"+
    "\5\14\6\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\3\14\1\u01d7\15\14\1\0\5\14\6\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\21\14\1\0\1\14\1\u01d8"+
    "\3\14\47\0\1\u01d9\24\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\10\14\1\u01da\10\14\1\0\5\14\6\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\u01db\1\u01dc\20\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\1\14\1\u01dd\17\14\1\0\5\14\33\0\2\u01de"+
    "\67\0\2\u01df\34\0\4\14\20\0\1\14\1\u01de\1\u01e0"+
    "\1\14\1\0\21\14\1\0\5\14\6\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\u01df\1\u01e1\20\14\1\0\5\14"+
    "\44\0\1\u01e2\27\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\5\14\1\u01e3\13\14\1\0\5\14\45\0\1\u01e4"+
    "\26\0\4\14\20\0\1\14\1\0\2\14\1\0\6\14"+
    "\1\u01e5\12\14\1\0\5\14\40\0\1\u01e6\22\0\1\u01e7"+
    "\56\0\1\u01e8\17\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\1\14\1\u01e9\17\14\1\0\2\14\1\u01ea\2\14"+
    "\6\0\4\14\20\0\1\14\1\0\2\14\1\0\15\14"+
    "\1\u01eb\3\14\1\0\5\14\6\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\14\14\1\u01ec\4\14\1\0\5\14"+
    "\6\0\4\14\20\0\1\u01ed\1\0\2\14\1\0\21\14"+
    "\1\0\5\14\57\0\1\u01ee\14\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\20\14\1\u01ef\1\0\5\14\6\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\u01f0\1\u01f1\20\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\u01f2\1\u01f3\20\14\1\0\5\14\53\0\1\u01f4\20\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\14\14\1\u01f5"+
    "\4\14\1\0\5\14\6\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\1\14\1\u01f6\17\14\1\0\5\14\42\0"+
    "\1\u01f7\31\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\3\14\1\u01f8\15\14\1\0\5\14\40\0\1\u01f9\67\0"+
    "\1\u01fa\56\0\2\u01fb\37\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\1\14\1\u01fc\17\14\1\0\5\14\6\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\3\14\1\u01fd"+
    "\15\14\1\0\5\14\6\0\4\14\20\0\1\14\1\u01fb"+
    "\1\u01fe\1\14\1\0\21\14\1\0\5\14\11\0\1\u01ff"+
    "\65\0\1\u0200\21\0\2\u0201\37\0\3\14\1\u0202\20\0"+
    "\1\14\1\0\2\14\1\0\21\14\1\0\5\14\6\0"+
    "\3\14\1\u0203\20\0\1\14\1\u0201\1\u0204\1\14\1\0"+
    "\21\14\1\0\5\14\36\0\2\u0205\63\0\1\u0206\36\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\u0205\1\u0207\20\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\14\1\0\1\14"+
    "\1\u0208\1\0\21\14\1\0\5\14\51\0\1\u0209\22\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\12\14\1\u020a"+
    "\6\14\1\0\5\14\6\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\5\14\1\u020b\13\14\1\0\5\14\6\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\1\14\1\u020c"+
    "\17\14\1\0\5\14\63\0\1\u020d\10\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\21\14\1\0\2\14\1\u020e"+
    "\2\14\50\0\1\u020f\23\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\11\14\1\u0210\7\14\1\0\5\14\6\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\13\14\1\u0211"+
    "\5\14\1\0\5\14\6\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\u0212\1\u0213\20\14\1\0\5\14\6\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\2\14\1\u0214\16\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\11\14\1\u0215\7\14\1\0\5\14\50\0\1\u0216"+
    "\23\0\4\14\20\0\1\14\1\0\2\14\1\0\11\14"+
    "\1\u0217\7\14\1\0\5\14\6\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\15\14\1\u0218\3\14\1\0\5\14"+
    "\11\0\1\u0219\62\0\3\14\1\u021a\20\0\1\14\1\0"+
    "\2\14\1\0\21\14\1\0\5\14\6\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\3\14\1\u021b\15\14\1\0"+
    "\5\14\11\0\1\u021c\62\0\3\14\1\u021d\20\0\1\14"+
    "\1\0\2\14\1\0\21\14\1\0\5\14\57\0\1\u021e"+
    "\14\0\4\14\20\0\1\14\1\0\2\14\1\0\20\14"+
    "\1\u021f\1\0\5\14\50\0\1\u0220\23\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\11\14\1\u0221\7\14\1\0"+
    "\5\14\42\0\1\u0222\31\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\3\14\1\u0223\15\14\1\0\5\14\6\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\u0224\1\u0225\20\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\6\14\1\u0226\12\14\1\0\5\14\6\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\17\14\1\u0227\1\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\u0228\1\0\2\14"+
    "\1\0\21\14\1\0\5\14\6\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\11\14\1\u0229\7\14\1\0\5\14"+
    "\44\0\1\u022a\27\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\5\14\1\u022b\13\14\1\0\5\14\6\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\16\14\1\u022c\2\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\5\14\1\u022d\13\14\1\0\5\14\41\0\1\u022e"+
    "\32\0\4\14\20\0\1\14\1\0\2\14\1\0\2\14"+
    "\1\u022f\16\14\1\0\5\14\50\0\1\u0230\23\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\11\14\1\u0231\7\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\u0232\1\u0233\20\14\1\0\5\14\57\0\1\u0234\14\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\20\14\1\u0235"+
    "\1\0\5\14\11\0\1\u0236\62\0\3\14\1\u0237\20\0"+
    "\1\14\1\0\2\14\1\0\21\14\1\0\5\14\36\0"+
    "\2\u0238\34\0\4\14\20\0\1\14\1\0\2\14\1\u0238"+
    "\1\u0239\20\14\1\0\5\14\50\0\1\u023a\4\0\1\u023b"+
    "\54\0\1\u023c\67\0\1\u023d\25\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\11\14\1\u023e\4\14\1\u023f\2\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\5\14\1\u0240\13\14\1\0\5\14\6\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\7\14\1\u0241\11\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\11\14\1\u0242\7\14\1\0\5\14\6\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\3\14\1\u0243\15\14"+
    "\1\0\5\14\46\0\1\u0244\25\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\7\14\1\u0245\11\14\1\0\5\14"+
    "\42\0\1\u0246\31\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\3\14\1\u0247\15\14\1\0\5\14\40\0\1\u0248"+
    "\33\0\4\14\20\0\1\14\1\0\2\14\1\0\1\14"+
    "\1\u0249\17\14\1\0\5\14\6\0\3\14\1\u024a\20\0"+
    "\1\14\1\0\2\14\1\0\21\14\1\0\5\14\51\0"+
    "\1\u024b\22\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\12\14\1\u024c\6\14\1\0\5\14\55\0\1\u024d\54\0"+
    "\1\u024e\27\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\16\14\1\u024f\2\14\1\0\5\14\6\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\5\14\1\u0250\13\14\1\0"+
    "\5\14\36\0\2\u0251\111\0\1\u0252\10\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\u0251\1\u0253\20\14\1\0\5\14"+
    "\6\0\4\14\20\0\1\14\1\0\2\14\1\0\21\14"+
    "\1\0\2\14\1\u0254\2\14\40\0\1\u0255\63\0\2\u0256"+
    "\34\0\4\14\20\0\1\14\1\0\2\14\1\0\1\14"+
    "\1\u0257\17\14\1\0\5\14\6\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\u0256\1\u0258\20\14\1\0\5\14\44\0"+
    "\1\u0259\27\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\5\14\1\u025a\13\14\1\0\5\14\6\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\5\14\1\u025b\13\14\1\0"+
    "\5\14\11\0\1\u025c\62\0\3\14\1\u025d\20\0\1\14"+
    "\1\0\2\14\1\0\21\14\1\0\5\14\43\0\1\u025e"+
    "\30\0\4\14\20\0\1\14\1\0\2\14\1\0\4\14"+
    "\1\u025f\14\14\1\0\5\14\6\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\14\14\1\u0260\4\14\1\0\5\14"+
    "\54\0\1\u0261\17\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\15\14\1\u0262\3\14\1\0\5\14\6\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\12\14\1\u0263\6\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\12\14\1\u0264\6\14\1\0\5\14\57\0\1\u0265"+
    "\14\0\4\14\20\0\1\14\1\0\2\14\1\0\20\14"+
    "\1\u0266\1\0\5\14\6\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\7\14\1\u0267\11\14\1\0\5\14\52\0"+
    "\1\u0268\21\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\13\14\1\u0269\5\14\1\0\5\14\6\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\21\14\1\u026a\1\u026b\4\14"+
    "\45\0\1\u026c\26\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\6\14\1\u026d\12\14\1\0\5\14\57\0\1\u026e"+
    "\14\0\4\14\20\0\1\14\1\0\2\14\1\0\20\14"+
    "\1\u026f\1\0\5\14\44\0\1\u0270\27\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\5\14\1\u0271\13\14\1\0"+
    "\5\14\50\0\1\u0272\23\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\11\14\1\u0273\7\14\1\0\5\14\6\0"+
    "\3\14\1\u0274\20\0\1\14\1\0\2\14\1\0\21\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\1\14\1\u0275\17\14\1\0\5\14\6\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\20\14\1\u0276\1\0"+
    "\5\14\6\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\21\14\1\0\2\14\1\u0277\2\14\33\0\2\u0278\37\0"+
    "\4\14\20\0\1\14\1\u0278\1\u0279\1\14\1\0\21\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\3\14\1\u027a\15\14\1\0\5\14\40\0\1\u027b"+
    "\33\0\4\14\20\0\1\14\1\0\2\14\1\0\1\14"+
    "\1\u027c\17\14\1\0\5\14\57\0\1\u027d\14\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\20\14\1\u027e\1\0"+
    "\5\14\50\0\1\u027f\23\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\11\14\1\u0280\7\14\1\0\5\14\44\0"+
    "\1\u0281\27\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\5\14\1\u0282\13\14\1\0\5\14\43\0\1\u0283\30\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\4\14\1\u0284"+
    "\14\14\1\0\5\14\47\0\1\u0285\24\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\10\14\1\u0286\10\14\1\0"+
    "\5\14\50\0\1\u0287\70\0\1\u0288\65\0\1\u0289\56\0"+
    "\1\u028a\27\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\11\14\1\u028b\7\14\1\0\5\14\6\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\14\14\1\u028c\4\14\1\0"+
    "\5\14\6\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\14\14\1\u028d\4\14\1\0\5\14\6\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\5\14\1\u028e\13\14\1\0"+
    "\5\14\6\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\3\14\1\u028f\15\14\1\0\5\14\6\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\21\14\1\u0290\1\u0291\4\14"+
    "\44\0\1\u0292\27\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\5\14\1\u0293\13\14\1\0\5\14\36\0\2\u0294"+
    "\34\0\4\14\20\0\1\14\1\0\2\14\1\u0294\1\u0295"+
    "\20\14\1\0\5\14\6\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\5\14\1\u0296\1\14\1\u0297\11\14\1\0"+
    "\5\14\44\0\1\u0298\27\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\5\14\1\u0299\13\14\1\0\5\14\53\0"+
    "\1\u029a\20\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\14\14\1\u029b\4\14\1\0\5\14\57\0\1\u029c\44\0"+
    "\2\u029d\34\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\20\14\1\u029e\1\0\5\14\6\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\u029d\1\u029f\20\14\1\0\5\14\44\0"+
    "\1\u02a0\61\0\1\u02a1\33\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\5\14\1\u02a2\13\14\1\0\5\14\6\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\1\14\1\u02a3"+
    "\17\14\1\0\5\14\11\0\1\u02a4\62\0\3\14\1\u02a5"+
    "\20\0\1\14\1\0\2\14\1\0\21\14\1\0\5\14"+
    "\6\0\4\14\20\0\1\14\1\0\2\14\1\0\21\14"+
    "\1\0\2\14\1\u02a6\2\14\33\0\2\u02a7\37\0\4\14"+
    "\20\0\1\14\1\u02a7\1\u02a8\1\14\1\0\21\14\1\0"+
    "\5\14\42\0\1\u02a9\31\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\3\14\1\u02aa\15\14\1\0\5\14\6\0"+
    "\3\14\1\u02ab\20\0\1\14\1\0\2\14\1\0\21\14"+
    "\1\0\5\14\11\0\1\u02ac\30\0\1\u02ad\31\0\3\14"+
    "\1\u02ae\20\0\1\14\1\0\2\14\1\0\3\14\1\u02af"+
    "\15\14\1\0\5\14\6\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\u02b0\1\u02b1\20\14\1\0\5\14\6\0\3\14"+
    "\1\u02b2\20\0\1\14\1\0\2\14\1\0\21\14\1\0"+
    "\5\14\33\0\2\u02b3\37\0\4\14\20\0\1\14\1\u02b3"+
    "\1\u02b4\1\14\1\0\21\14\1\0\5\14\6\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\5\14\1\u02b5\13\14"+
    "\1\0\5\14\50\0\1\u02b6\23\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\11\14\1\u02b7\7\14\1\0\5\14"+
    "\33\0\2\u02b8\37\0\4\14\20\0\1\14\1\u02b8\1\u02b9"+
    "\1\14\1\0\21\14\1\0\5\14\36\0\2\u02ba\34\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\u02ba\1\u02bb\20\14"+
    "\1\0\5\14\33\0\2\u02bc\37\0\4\14\20\0\1\14"+
    "\1\u02bc\1\u02bd\1\14\1\0\21\14\1\0\5\14\63\0"+
    "\1\u02be\10\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\21\14\1\0\2\14\1\u02bf\2\14\57\0\1\u02c0\14\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\20\14\1\u02c1"+
    "\1\0\5\14\6\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\11\14\1\u02c2\7\14\1\0\5\14\6\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\5\14\1\u02c3\13\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\10\14\1\u02c4\10\14\1\0\5\14\6\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\4\14\1\u02c5\14\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\14\1\u02c6\1\u02c7"+
    "\1\14\1\0\21\14\1\0\5\14\33\0\2\u02c8\37\0"+
    "\4\14\20\0\1\14\1\u02c8\1\u02c9\1\14\1\0\21\14"+
    "\1\0\5\14\57\0\1\u02ca\14\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\20\14\1\u02cb\1\0\5\14\42\0"+
    "\1\u02cc\31\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\3\14\1\u02cd\15\14\1\0\5\14\42\0\1\u02ce\31\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\3\14\1\u02cf"+
    "\15\14\1\0\5\14\11\0\1\u02d0\62\0\3\14\1\u02d1"+
    "\20\0\1\14\1\0\2\14\1\0\21\14\1\0\5\14"+
    "\46\0\1\u02d2\63\0\1\u02d3\65\0\1\u02d4\27\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\7\14\1\u02d5\11\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\5\14\1\u02d6\13\14\1\0\5\14\6\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\5\14\1\u02d7\13\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\1\14\1\u02d8\17\14\1\0\5\14\33\0\2\u02d9"+
    "\37\0\4\14\20\0\1\14\1\u02d9\1\u02da\1\14\1\0"+
    "\21\14\1\0\5\14\50\0\1\u02db\23\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\11\14\1\u02dc\7\14\1\0"+
    "\5\14\6\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\17\14\1\u02dd\1\14\1\0\5\14\6\0\4\14\20\0"+
    "\1\u02de\1\0\2\14\1\0\21\14\1\0\5\14\33\0"+
    "\2\u02df\37\0\4\14\20\0\1\14\1\u02df\1\u02e0\1\14"+
    "\1\0\21\14\1\0\5\14\50\0\1\u02e1\23\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\11\14\1\u02e2\7\14"+
    "\1\0\5\14\51\0\1\u02e3\56\0\1\u02e4\31\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\12\14\1\u02e5\6\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\3\14\1\u02e6\15\14\1\0\5\14\41\0\1\u02e7"+
    "\32\0\4\14\20\0\1\14\1\0\2\14\1\0\2\14"+
    "\1\u02e8\16\14\1\0\5\14\63\0\1\u02e9\10\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\21\14\1\0\2\14"+
    "\1\u02ea\2\14\6\0\3\14\1\u02eb\20\0\1\14\1\0"+
    "\2\14\1\0\21\14\1\0\5\14\36\0\2\u02ec\34\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\u02ec\1\u02ed\20\14"+
    "\1\0\5\14\51\0\1\u02ee\22\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\12\14\1\u02ef\6\14\1\0\5\14"+
    "\6\0\4\14\20\0\1\14\1\0\2\14\1\0\6\14"+
    "\1\u02f0\12\14\1\0\5\14\63\0\1\u02f1\34\0\1\u02f2"+
    "\41\0\4\14\20\0\1\14\1\0\2\14\1\0\21\14"+
    "\1\0\2\14\1\u02f3\2\14\6\0\4\14\20\0\1\u02f4"+
    "\1\0\2\14\1\0\21\14\1\0\5\14\11\0\1\u02f5"+
    "\62\0\3\14\1\u02f6\20\0\1\14\1\0\2\14\1\0"+
    "\21\14\1\0\5\14\6\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\6\14\1\u02f7\12\14\1\0\5\14\63\0"+
    "\1\u02f8\10\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\21\14\1\0\2\14\1\u02f9\2\14\46\0\1\u02fa\25\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\7\14\1\u02fb"+
    "\11\14\1\0\5\14\11\0\1\u02fc\62\0\3\14\1\u02fd"+
    "\20\0\1\14\1\0\2\14\1\0\21\14\1\0\5\14"+
    "\33\0\2\u02fe\37\0\4\14\20\0\1\14\1\u02fe\1\u02ff"+
    "\1\14\1\0\21\14\1\0\5\14\6\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\14\14\1\u0300\4\14\1\0"+
    "\5\14\6\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\20\14\1\u0301\1\0\5\14\6\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\4\14\1\u0302\14\14\1\0\5\14"+
    "\6\0\4\14\20\0\1\14\1\0\2\14\1\0\7\14"+
    "\1\u0303\11\14\1\0\5\14\36\0\2\u0304\34\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\u0304\1\u0305\20\14\1\0"+
    "\5\14\33\0\2\u0306\37\0\4\14\20\0\1\14\1\u0306"+
    "\1\u0307\1\14\1\0\21\14\1\0\5\14\46\0\1\u0308"+
    "\25\0\4\14\20\0\1\14\1\0\2\14\1\0\7\14"+
    "\1\u0309\11\14\1\0\5\14\63\0\1\u030a\10\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\21\14\1\0\2\14"+
    "\1\u030b\2\14\33\0\2\u030c\110\0\1\u030d\14\0\4\14"+
    "\20\0\1\14\1\u030c\1\u030e\1\14\1\0\21\14\1\0"+
    "\5\14\6\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\20\14\1\u030f\1\0\5\14\6\0\4\14\20\0\1\14"+
    "\1\u0310\1\u0311\1\14\1\0\21\14\1\0\5\14\57\0"+
    "\1\u0312\14\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\20\14\1\u0313\1\0\5\14\6\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\1\14\1\u0314\17\14\1\0\5\14"+
    "\6\0\4\14\20\0\1\14\1\0\2\14\1\0\20\14"+
    "\1\u0315\1\0\5\14\33\0\2\u0316\37\0\4\14\20\0"+
    "\1\14\1\u0316\1\u0317\1\14\1\0\21\14\1\0\5\14"+
    "\46\0\1\u0318\52\0\2\u0319\37\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\7\14\1\u031a\11\14\1\0\5\14"+
    "\6\0\4\14\20\0\1\14\1\u0319\1\u031b\1\14\1\0"+
    "\21\14\1\0\5\14\36\0\2\u031c\34\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\u031c\1\u031d\20\14\1\0\5\14"+
    "\6\0\4\14\20\0\1\14\1\0\2\14\1\0\13\14"+
    "\1\u031e\5\14\1\0\5\14\47\0\1\u031f\24\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\10\14\1\u0320\10\14"+
    "\1\0\5\14\44\0\1\u0321\27\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\5\14\1\u0322\13\14\1\0\5\14"+
    "\6\0\4\14\20\0\1\14\1\0\2\14\1\u0323\1\u0324"+
    "\20\14\1\0\5\14\36\0\2\u0325\70\0\1\u0326\31\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\u0325\1\u0327\20\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\3\14\1\u0328\15\14\1\0\5\14\46\0\1\u0329"+
    "\25\0\4\14\20\0\1\14\1\0\2\14\1\0\7\14"+
    "\1\u032a\11\14\1\0\5\14\6\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\u032b\1\u032c\20\14\1\0\5\14\43\0"+
    "\1\u032d\30\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\4\14\1\u032e\14\14\1\0\5\14\44\0\1\u032f\27\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\5\14\1\u0330"+
    "\13\14\1\0\5\14\50\0\1\u0331\23\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\11\14\1\u0332\7\14\1\0"+
    "\5\14\6\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\1\14\1\u0333\17\14\1\0\5\14\6\0\4\14\20\0"+
    "\1\14\1\u0334\1\u0335\1\14\1\0\21\14\1\0\5\14"+
    "\6\0\4\14\20\0\1\u0336\1\0\2\14\1\0\21\14"+
    "\1\0\5\14\6\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\5\14\1\u0337\13\14\1\0\5\14\50\0\1\u0338"+
    "\23\0\4\14\20\0\1\14\1\0\2\14\1\0\11\14"+
    "\1\u0339\7\14\1\0\5\14\44\0\1\u033a\27\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\5\14\1\u033b\13\14"+
    "\1\0\5\14\63\0\1\u033c\10\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\21\14\1\0\2\14\1\u033d\2\14"+
    "\6\0\4\14\20\0\1\14\1\0\2\14\1\0\5\14"+
    "\1\u033e\13\14\1\0\5\14\6\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\10\14\1\u033f\10\14\1\0\5\14"+
    "\36\0\2\u0340\34\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\u0340\1\u0341\20\14\1\0\5\14\43\0\1\u0342\30\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\4\14\1\u0343"+
    "\14\14\1\0\5\14\42\0\1\u0344\31\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\3\14\1\u0345\15\14\1\0"+
    "\5\14\6\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\11\14\1\u0346\7\14\1\0\5\14\57\0\1\u0347\14\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\20\14\1\u0348"+
    "\1\0\5\14\11\0\1\u0349\62\0\3\14\1\u034a\20\0"+
    "\1\14\1\0\2\14\1\0\21\14\1\0\5\14\46\0"+
    "\1\u034b\25\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\7\14\1\u034c\11\14\1\0\5\14\42\0\1\u034d\61\0"+
    "\2\u034e\34\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\3\14\1\u034f\15\14\1\0\5\14\6\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\u034e\1\u0350\20\14\1\0\5\14"+
    "\36\0\2\u0351\34\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\u0351\1\u0352\20\14\1\0\5\14\46\0\1\u0353\25\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\7\14\1\u0354"+
    "\11\14\1\0\5\14\46\0\1\u0355\25\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\7\14\1\u0356\11\14\1\0"+
    "\5\14\33\0\2\u0357\37\0\4\14\20\0\1\14\1\u0357"+
    "\1\u0358\1\14\1\0\21\14\1\0\5\14\53\0\1\u0359"+
    "\20\0\4\14\20\0\1\14\1\0\2\14\1\0\14\14"+
    "\1\u035a\4\14\1\0\5\14\6\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\u035b\1\u035c\20\14\1\0\5\14\36\0"+
    "\2\u035d\34\0\4\14\20\0\1\14\1\0\2\14\1\u035d"+
    "\1\u035e\20\14\1\0\5\14\6\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\10\14\1\u035f\10\14\1\0\5\14"+
    "\6\0\4\14\20\0\1\14\1\u0360\1\u0361\1\14\1\0"+
    "\21\14\1\0\5\14\57\0\1\u0362\14\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\20\14\1\u0363\1\0\5\14"+
    "\53\0\1\u0364\20\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\14\14\1\u0365\4\14\1\0\5\14\33\0\2\u0366"+
    "\37\0\4\14\20\0\1\14\1\u0366\1\u0367\1\14\1\0"+
    "\21\14\1\0\5\14\6\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\20\14\1\u0368\1\0\5\14\6\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\4\14\1\u0369\14\14"+
    "\1\0\5\14\40\0\1\u036a\33\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\1\14\1\u036b\17\14\1\0\5\14"+
    "\63\0\1\u036c\10\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\21\14\1\0\2\14\1\u036d\2\14\33\0\2\u036e"+
    "\37\0\4\14\20\0\1\14\1\u036e\1\u036f\1\14\1\0"+
    "\21\14\1\0\5\14\6\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\21\14\1\0\2\14\1\u0370\2\14\32\0"+
    "\1\u0371\41\0\4\14\20\0\1\u0372\1\0\2\14\1\0"+
    "\21\14\1\0\5\14\45\0\1\u0373\26\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\6\14\1\u0374\12\14\1\0"+
    "\5\14\44\0\1\u0375\27\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\5\14\1\u0376\13\14\1\0\5\14\33\0"+
    "\2\u0377\75\0\1\u0378\27\0\4\14\20\0\1\14\1\u0377"+
    "\1\u0379\1\14\1\0\21\14\1\0\5\14\6\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\5\14\1\u037a\13\14"+
    "\1\0\5\14\54\0\1\u037b\17\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\15\14\1\u037c\3\14\1\0\5\14"+
    "\44\0\1\u037d\27\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\5\14\1\u037e\13\14\1\0\5\14\44\0\1\u037f"+
    "\27\0\4\14\20\0\1\14\1\0\2\14\1\0\5\14"+
    "\1\u0380\13\14\1\0\5\14\40\0\1\u0381\33\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\1\14\1\u0382\17\14"+
    "\1\0\5\14\50\0\1\u0383\23\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\11\14\1\u0384\7\14\1\0\5\14"+
    "\50\0\1\u0385\23\0\4\14\20\0\1\14\1\0\2\14"+
    "\1\0\11\14\1\u0386\7\14\1\0\5\14\6\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\5\14\1\u0387\13\14"+
    "\1\0\5\14\44\0\1\u0388\27\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\5\14\1\u0389\13\14\1\0\5\14"+
    "\6\0\4\14\20\0\1\14\1\u038a\1\u038b\1\14\1\0"+
    "\21\14\1\0\5\14\6\0\4\14\20\0\1\u038c\1\0"+
    "\2\14\1\0\21\14\1\0\5\14\50\0\1\u038d\23\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\11\14\1\u038e"+
    "\7\14\1\0\5\14\44\0\1\u038f\27\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\5\14\1\u0390\13\14\1\0"+
    "\5\14\6\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\4\14\1\u0391\14\14\1\0\5\14\40\0\1\u0392\33\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\1\14\1\u0393"+
    "\17\14\1\0\5\14\36\0\2\u0394\34\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\u0394\1\u0395\20\14\1\0\5\14"+
    "\33\0\2\u0396\37\0\4\14\20\0\1\14\1\u0396\1\u0397"+
    "\1\14\1\0\21\14\1\0\5\14\33\0\2\u0398\37\0"+
    "\4\14\20\0\1\14\1\u0398\1\u0399\1\14\1\0\21\14"+
    "\1\0\5\14\42\0\1\u039a\31\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\3\14\1\u039b\15\14\1\0\5\14"+
    "\33\0\2\u039c\37\0\4\14\20\0\1\14\1\u039c\1\u039d"+
    "\1\14\1\0\21\14\1\0\5\14\33\0\2\u039e\37\0"+
    "\4\14\20\0\1\14\1\u039e\1\u039f\1\14\1\0\21\14"+
    "\1\0\5\14\36\0\2\u03a0\34\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\u03a0\1\u03a1\20\14\1\0\5\14\57\0"+
    "\1\u03a2\14\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\20\14\1\u03a3\1\0\5\14\57\0\1\u03a4\14\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\20\14\1\u03a5\1\0"+
    "\5\14\6\0\4\14\20\0\1\14\1\u03a6\1\u03a7\1\14"+
    "\1\0\21\14\1\0\5\14\57\0\1\u03a8\14\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\20\14\1\u03a9\1\0"+
    "\5\14\36\0\2\u03aa\34\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\u03aa\1\u03ab\20\14\1\0\5\14\6\0\4\14"+
    "\20\0\1\14\1\0\2\14\1\0\10\14\1\u03ac\10\14"+
    "\1\0\5\14\42\0\1\u03ad\31\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\0\3\14\1\u03ae\15\14\1\0\5\14"+
    "\33\0\2\u03af\37\0\4\14\20\0\1\14\1\u03af\1\u03b0"+
    "\1\14\1\0\21\14\1\0\5\14\6\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\7\14\1\u03b1\11\14\1\0"+
    "\5\14\43\0\1\u03b2\30\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\4\14\1\u03b3\14\14\1\0\5\14\46\0"+
    "\1\u03b4\25\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\7\14\1\u03b5\11\14\1\0\5\14\32\0\1\u03b6\41\0"+
    "\4\14\20\0\1\u03b7\1\0\2\14\1\0\21\14\1\0"+
    "\5\14\50\0\1\u03b8\23\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\11\14\1\u03b9\7\14\1\0\5\14\33\0"+
    "\2\u03ba\37\0\4\14\20\0\1\14\1\u03ba\1\u03bb\1\14"+
    "\1\0\21\14\1\0\5\14\33\0\2\u03bc\37\0\4\14"+
    "\20\0\1\14\1\u03bc\1\u03bd\1\14\1\0\21\14\1\0"+
    "\5\14\63\0\1\u03be\10\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\21\14\1\0\2\14\1\u03bf\2\14\50\0"+
    "\1\u03c0\23\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\11\14\1\u03c1\7\14\1\0\5\14\6\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\5\14\1\u03c2\13\14\1\0"+
    "\5\14\55\0\1\u03c3\16\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\16\14\1\u03c4\2\14\1\0\5\14\6\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\5\14\1\u03c5"+
    "\13\14\1\0\5\14\42\0\1\u03c6\31\0\4\14\20\0"+
    "\1\14\1\0\2\14\1\0\3\14\1\u03c7\15\14\1\0"+
    "\5\14\44\0\1\u03c8\27\0\4\14\20\0\1\14\1\0"+
    "\2\14\1\0\5\14\1\u03c9\13\14\1\0\5\14\42\0"+
    "\1\u03ca\31\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\3\14\1\u03cb\15\14\1\0\5\14\57\0\1\u03cc\14\0"+
    "\4\14\20\0\1\14\1\0\2\14\1\0\20\14\1\u03cd"+
    "\1\0\5\14\33\0\2\u03ce\37\0\4\14\20\0\1\14"+
    "\1\u03ce\1\u03cf\1\14\1\0\21\14\1\0\5\14\57\0"+
    "\1\u03d0\14\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\20\14\1\u03d1\1\0\5\14\6\0\4\14\20\0\1\14"+
    "\1\u03d2\1\u03d3\1\14\1\0\21\14\1\0\5\14\44\0"+
    "\1\u03d4\27\0\4\14\20\0\1\14\1\0\2\14\1\0"+
    "\5\14\1\u03d5\13\14\1\0\5\14\33\0\2\u03d6\37\0"+
    "\4\14\20\0\1\14\1\u03d6\1\u03d7\1\14\1\0\21\14"+
    "\1\0\5\14\36\0\2\u03d8\34\0\4\14\20\0\1\14"+
    "\1\0\2\14\1\u03d8\1\u03d9\20\14\1\0\5\14\33\0"+
    "\2\u03da\37\0\4\14\20\0\1\14\1\u03da\1\u03db\1\14"+
    "\1\0\21\14\1\0\5\14\33\0\2\u03dc\37\0\4\14"+
    "\20\0\1\14\1\u03dc\1\u03dd\1\14\1\0\21\14\1\0"+
    "\5\14\33\0\2\u03de\37\0\4\14\20\0\1\14\1\u03de"+
    "\1\u03df\1\14\1\0\21\14\1\0\5\14\44\0\1\u03e0"+
    "\27\0\4\14\20\0\1\14\1\0\2\14\1\0\5\14"+
    "\1\u03e1\13\14\1\0\5\14\33\0\2\u03e2\37\0\4\14"+
    "\20\0\1\14\1\u03e2\1\u03e3\1\14\1\0\21\14\1\0"+
    "\5\14\1\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[45252];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String[] ZZ_ERROR_MSG = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\3\0\1\11\3\1\1\11\4\1\1\11\1\1\10\11"+
    "\6\1\2\11\30\1\2\11\3\1\2\0\1\1\1\0"+
    "\2\11\1\0\4\11\3\1\4\0\4\1\1\0\1\1"+
    "\1\11\2\0\7\1\1\0\10\1\1\0\4\1\1\11"+
    "\11\1\1\0\11\1\1\0\1\1\2\11\2\1\4\0"+
    "\4\1\1\0\1\1\3\0\5\1\1\0\2\1\1\0"+
    "\4\1\1\0\7\1\2\0\6\1\1\0\6\1\1\0"+
    "\3\1\1\0\2\1\1\0\7\1\1\0\2\1\1\0"+
    "\3\1\4\0\4\1\1\11\1\1\1\11\2\0\4\1"+
    "\1\0\2\1\1\0\4\1\1\11\5\1\1\0\3\1"+
    "\2\0\6\1\1\0\6\1\1\0\2\1\1\0\1\1"+
    "\1\0\2\1\1\0\4\1\1\0\2\1\1\0\2\1"+
    "\1\0\2\1\4\0\4\1\2\0\2\1\2\0\2\1"+
    "\1\0\3\1\1\0\4\1\1\0\1\1\1\11\2\1"+
    "\2\0\4\1\1\0\4\1\1\0\6\1\2\0\3\1"+
    "\1\0\1\1\1\0\2\1\1\0\3\1\1\0\2\1"+
    "\1\0\2\1\1\0\2\1\1\0\1\11\2\0\4\1"+
    "\2\0\2\1\2\0\2\1\1\0\3\1\1\0\2\1"+
    "\1\0\2\1\1\0\2\1\2\0\2\1\1\0\2\1"+
    "\1\0\4\1\1\0\3\1\1\0\3\1\2\0\3\1"+
    "\1\0\1\1\1\0\2\1\2\0\4\1\1\0\3\1"+
    "\1\0\2\1\1\0\1\1\3\0\3\1\2\0\2\1"+
    "\2\0\2\1\1\0\3\1\1\0\1\1\1\0\5\1"+
    "\1\0\6\1\1\11\2\1\1\0\1\1\1\0\1\1"+
    "\1\0\6\1\1\0\3\1\1\0\1\1\1\0\2\1"+
    "\1\11\1\0\2\1\1\0\1\1\1\0\1\1\3\0"+
    "\5\1\1\11\1\1\1\0\1\1\1\0\1\1\1\0"+
    "\2\1\1\0\1\1\2\0\1\11\3\1\2\0\1\11"+
    "\3\1\2\0\2\1\1\0\3\1\1\0\1\1\1\0"+
    "\2\1\1\0\3\1\1\0\2\1\1\0\2\1\1\0"+
    "\1\1\1\11\1\1\1\0\1\1\1\0\1\1\1\0"+
    "\5\1\1\0\3\1\1\0\1\1\1\0\1\1\1\0"+
    "\1\1\1\0\1\1\1\0\1\1\1\0\1\1\4\0"+
    "\6\1\1\0\1\1\1\11\1\1\1\0\2\1\1\0"+
    "\1\1\1\11\1\0\2\1\2\0\2\1\2\0\2\1"+
    "\1\0\2\1\1\0\1\1\1\0\2\1\1\0\3\1"+
    "\1\0\2\1\1\0\1\1\1\0\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\1\1\1\0\5\1\1\11\2\1"+
    "\1\11\1\1\1\0\1\1\1\0\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\1\1\3\0\1\11\5\1\1\11"+
    "\1\1\1\0\1\1\1\0\3\1\1\0\1\1\1\0"+
    "\1\1\2\0\2\1\1\11\1\0\2\1\1\0\2\1"+
    "\1\0\1\1\1\0\2\1\2\0\2\1\1\0\2\1"+
    "\1\11\2\1\1\0\1\1\1\11\1\1\1\0\1\1"+
    "\1\11\1\1\1\0\1\1\1\0\5\1\1\0\1\1"+
    "\1\11\1\1\1\0\1\1\1\11\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\1\11\1\0\4\1\1\11\1\1"+
    "\1\0\3\1\1\11\1\1\1\0\1\1\2\0\2\1"+
    "\1\11\1\1\1\0\2\1\1\0\1\1\1\0\2\1"+
    "\2\0\2\1\1\0\2\1\1\0\1\1\1\0\1\1"+
    "\1\0\1\1\1\11\5\1\1\0\1\1\1\11\1\1"+
    "\1\11\1\1\1\0\1\1\1\11\1\0\2\1\1\11"+
    "\1\1\1\11\3\1\1\0\1\1\1\0\1\11\2\1"+
    "\1\0\2\1\1\0\1\1\1\0\1\1\1\0\1\1"+
    "\2\0\2\1\1\0\1\1\1\0\1\1\1\0\3\1"+
    "\1\0\2\1\1\0\3\1\1\0\1\1\1\0\1\1"+
    "\1\0\3\1\1\0\1\1\1\0\4\1\1\0\1\1"+
    "\1\0\1\1\1\0\1\1\2\0\2\1\1\0\1\1"+
    "\1\0\1\1\1\0\1\1\1\11\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\2\1\1\11\1\1\1\11\1\1"+
    "\1\0\1\1\1\11\3\1\1\0\1\1\1\0\1\1"+
    "\1\11\2\1\1\0\1\1\1\0\1\1\1\0\1\1"+
    "\1\11\1\0\2\1\1\0\1\1\1\0\1\1\1\0"+
    "\1\1\1\0\1\1\1\0\1\1\1\0\2\1\1\0"+
    "\1\1\1\0\2\1\1\0\1\1\1\0\2\1\1\0"+
    "\1\1\1\0\1\1\1\11\1\1\1\11\1\1\1\0"+
    "\1\1\1\11\1\1\1\11\1\1\1\0\1\1\1\0"+
    "\1\1\1\0\1\1\1\11\1\1\1\0\1\1\1\0"+
    "\2\1\1\0\1\1\1\11\2\1\1\0\1\1\1\0"+
    "\1\1\1\0\1\1\1\0\1\1\1\11\1\1\1\11"+
    "\1\1\1\0\1\1\1\0\2\1\1\11\2\1\1\0"+
    "\1\1\1\0\1\1\1\0\1\1\1\0\1\1\1\11"+
    "\1\1\1\0\1\1\1\11\1\1\1\0\1\1\1\11"+
    "\1\1\1\0\1\1\1\11\1\1\1\11\1\1\1\11"+
    "\1\1\1\0\1\1\1\11\1\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[995];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private CharSequence zzBuffer = "";

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /**
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
  public _CabalParsingLexer() { this((java.io.Reader)null); }

  /** This should match the newline indent rule defined in our Flex lexer. */
  public static Pattern NEWLINE_INDENT_REGEX = Pattern.compile(
    "(\\r|\\n|\\r\\n)(( |\\t)*)", Pattern.MULTILINE
  );

  protected int currentLineIndent = 0;
  protected int indentLevel = 0;


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public _CabalParsingLexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    int size = 0;
    for (int i = 0, length = packed.length(); i < length; i += 2) {
      size += packed.charAt(i);
    }
    char[] map = new char[size];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < packed.length()) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }

  public final int getTokenStart() {
    return zzStartRead;
  }

  public final int getTokenEnd() {
    return getTokenStart() + yylength();
  }

  public void reset(CharSequence buffer, int start, int end, int initialState) {
    zzBuffer = buffer;
    zzCurrentPos = zzMarkedPos = zzStartRead = start;
    zzAtEOF  = false;
    zzAtBOL = true;
    zzEndRead = end;
    yybegin(initialState);
  }

  /**
   * Refills the input buffer.
   *
   * @return      {@code false}, iff there was new input.
   *
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {
    return true;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final CharSequence yytext() {
    return zzBuffer.subSequence(zzStartRead, zzMarkedPos);
  }


  /**
   * Returns the character at position {@code pos} from the
   * matched text.
   *
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch.
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer.charAt(zzStartRead+pos);
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occurred while scanning.
   *
   * In a wellformed scanner (no or only correct usage of
   * yypushback(int) and a match-all fallback rule) this method
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() {
    if (!zzEOFDone) {
      zzEOFDone = true;
    
    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public IElementType advance() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + ZZ_CMAP(zzInput) ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        zzDoEOF();
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { yypushback(yylength()); yybegin(MAIN); return CabalTypes.WHITE_SPACE;
            } 
            // fall through
          case 108: break;
          case 2: 
            { return CabalTypes.WHITE_SPACE;
            } 
            // fall through
          case 109: break;
          case 3: 
            { return CabalTypes.OTHER_CHAR;
            } 
            // fall through
          case 110: break;
          case 4: 
            { final Matcher m = NEWLINE_INDENT_REGEX.matcher(yytext());
    if (!m.matches()) throw new AssertionError("NEWLINE_INDENT_REGEX did not match!");
    final String indent = m.group(2);
    yypushback(indent.length());
    yybegin(INDENT);
    return CabalTypes.EOL;
            } 
            // fall through
          case 111: break;
          case 5: 
            { return CabalTypes.UNKNOWN_KEY;
            } 
            // fall through
          case 112: break;
          case 6: 
            { return CabalTypes.DOT;
            } 
            // fall through
          case 113: break;
          case 7: 
            { return CabalTypes.NUMBERS;
            } 
            // fall through
          case 114: break;
          case 8: 
            { return CabalTypes.DASH;
            } 
            // fall through
          case 115: break;
          case 9: 
            { return CabalTypes.COLON;
            } 
            // fall through
          case 116: break;
          case 10: 
            { return CabalTypes.LPAREN;
            } 
            // fall through
          case 117: break;
          case 11: 
            { return CabalTypes.RPAREN;
            } 
            // fall through
          case 118: break;
          case 12: 
            { return CabalTypes.LBRACKET;
            } 
            // fall through
          case 119: break;
          case 13: 
            { return CabalTypes.RBRACKET;
            } 
            // fall through
          case 120: break;
          case 14: 
            { return CabalTypes.LBRACE;
            } 
            // fall through
          case 121: break;
          case 15: 
            { return CabalTypes.RBRACE;
            } 
            // fall through
          case 122: break;
          case 16: 
            { return CabalTypes.GT;
            } 
            // fall through
          case 123: break;
          case 17: 
            { return CabalTypes.LT;
            } 
            // fall through
          case 124: break;
          case 18: 
            { return CabalTypes.COMMA;
            } 
            // fall through
          case 125: break;
          case 19: 
            { return CabalTypes.BANG;
            } 
            // fall through
          case 126: break;
          case 20: 
            { return CabalTypes.TAB;
            } 
            // fall through
          case 127: break;
          case 21: 
            { final int numWhitespace = yylength() - 1;

    if (currentLineIndent == 0) {
      if (numWhitespace == indentLevel) {
        // Consume all except the NON_WHITE_SPACE char
        yypushback(1);
        yybegin(YYINITIAL);
        //return CabalTypes.LINE_START;
        return CabalTypes.WHITE_SPACE;
      }
      if (numWhitespace > indentLevel) {
        // Consume up to the indentLevel + 1 for the INDENT
        currentLineIndent = indentLevel + 1;
        yypushback(yylength() - (indentLevel + 1));
        return CabalTypes.INDENT;
      }
      if (numWhitespace < indentLevel) {
        --indentLevel;
        yypushback(yylength());
        return CabalTypes.DEDENT;
      }
      // Shouldn't happen since we checked ==, >, and <
      throw new AssertionError(
        "Unexpected case: numWhitespace: " + numWhitespace + "; "
          + "indentLevel: " + indentLevel
      );
    }

    // If no more whitespace, start the line.
    if (numWhitespace == 0) {
      indentLevel = currentLineIndent;
      currentLineIndent = 0;
      yypushback(1);
      yybegin(YYINITIAL);
      return CabalTypes.WHITE_SPACE;
      //return CabalTypes.LINE_START;
    }

    ++currentLineIndent;
    // Consume 1 whitespace char.
    yypushback(yylength() - 1);
    return CabalTypes.INDENT;
            } 
            // fall through
          case 128: break;
          case 22: 
            { currentLineIndent = 0; return CabalTypes.WHITE_SPACE;
            } 
            // fall through
          case 129: break;
          case 23: 
            { return CabalTypes.COMMENT;
            } 
            // fall through
          case 130: break;
          case 24: 
            { return CabalTypes.EQ;
            } 
            // fall through
          case 131: break;
          case 25: 
            { return CabalTypes.GTE;
            } 
            // fall through
          case 132: break;
          case 26: 
            { return CabalTypes.LTE;
            } 
            // fall through
          case 133: break;
          case 27: 
            { return CabalTypes.AND;
            } 
            // fall through
          case 134: break;
          case 28: 
            { return CabalTypes.OR;
            } 
            // fall through
          case 135: break;
          case 29: 
            { return CabalTypes.AS;
            } 
            // fall through
          case 136: break;
          case 30: 
            { return CabalTypes.IF;
            } 
            // fall through
          case 137: break;
          case 31: 
            { return CabalTypes.OS;
            } 
            // fall through
          case 138: break;
          case 32: 
            { return CabalTypes.PVP_GTE;
            } 
            // fall through
          case 139: break;
          case 33: 
            { return CabalTypes.TAG_KEY;
            } 
            // fall through
          case 140: break;
          case 34: 
            { return CabalTypes.CUSTOM_KEY;
            } 
            // fall through
          case 141: break;
          case 35: 
            { return CabalTypes.ARCH;
            } 
            // fall through
          case 142: break;
          case 36: 
            { return CabalTypes.WITH;
            } 
            // fall through
          case 143: break;
          case 37: 
            { return CabalTypes.IMPL;
            } 
            // fall through
          case 144: break;
          case 38: 
            { return CabalTypes.TRUE;
            } 
            // fall through
          case 145: break;
          case 39: 
            { return CabalTypes.TYPE_KEY;
            } 
            // fall through
          case 146: break;
          case 40: 
            { return CabalTypes.ELSE;
            } 
            // fall through
          case 147: break;
          case 41: 
            { return CabalTypes.FLAG;
            } 
            // fall through
          case 148: break;
          case 42: 
            { return CabalTypes.NAME_KEY;
            } 
            // fall through
          case 149: break;
          case 43: 
            { return CabalTypes.FALSE;
            } 
            // fall through
          case 150: break;
          case 44: 
            { return CabalTypes.AUTHOR_KEY;
            } 
            // fall through
          case 151: break;
          case 45: 
            { return CabalTypes.SUBDIR_KEY;
            } 
            // fall through
          case 152: break;
          case 46: 
            { return CabalTypes.MANUAL_KEY;
            } 
            // fall through
          case 153: break;
          case 47: 
            { return CabalTypes.BRANCH_KEY;
            } 
            // fall through
          case 154: break;
          case 48: 
            { return CabalTypes.EXPOSED_KEY;
            } 
            // fall through
          case 155: break;
          case 49: 
            { return CabalTypes.LICENSE_KEY;
            } 
            // fall through
          case 156: break;
          case 50: 
            { return CabalTypes.LIBRARY_KEY;
            } 
            // fall through
          case 157: break;
          case 51: 
            { return CabalTypes.MAIN_IS_KEY;
            } 
            // fall through
          case 158: break;
          case 52: 
            { return CabalTypes.VERSION_KEY;
            } 
            // fall through
          case 159: break;
          case 53: 
            { return CabalTypes.DEFAULT_KEY;
            } 
            // fall through
          case 160: break;
          case 54: 
            { return CabalTypes.SYNOPSIS_KEY;
            } 
            // fall through
          case 161: break;
          case 55: 
            { return CabalTypes.INCLUDES_KEY;
            } 
            // fall through
          case 162: break;
          case 56: 
            { return CabalTypes.HOMEPAGE_KEY;
            } 
            // fall through
          case 163: break;
          case 57: 
            { return CabalTypes.LOCATION_KEY;
            } 
            // fall through
          case 164: break;
          case 58: 
            { return CabalTypes.CATEGORY_KEY;
            } 
            // fall through
          case 165: break;
          case 59: 
            { return CabalTypes.DATA_DIR_KEY;
            } 
            // fall through
          case 166: break;
          case 60: 
            { return CabalTypes.STABILITY_KEY;
            } 
            // fall through
          case 167: break;
          case 61: 
            { return CabalTypes.C_SOURCES_KEY;
            } 
            // fall through
          case 168: break;
          case 62: 
            { return CabalTypes.COPYRIGHT_KEY;
            } 
            // fall through
          case 169: break;
          case 63: 
            { return CabalTypes.BUILDABLE_KEY;
            } 
            // fall through
          case 170: break;
          case 64: 
            { return CabalTypes.BENCHMARK_KEY;
            } 
            // fall through
          case 171: break;
          case 65: 
            { return CabalTypes.TEST_SUITE_KEY;
            } 
            // fall through
          case 172: break;
          case 66: 
            { return CabalTypes.EXTENSIONS_KEY;
            } 
            // fall through
          case 173: break;
          case 67: 
            { return CabalTypes.EXECUTABLE_KEY;
            } 
            // fall through
          case 174: break;
          case 68: 
            { return CabalTypes.FRAMEWORKS_KEY;
            } 
            // fall through
          case 175: break;
          case 69: 
            { return CabalTypes.LD_OPTIONS_KEY;
            } 
            // fall through
          case 176: break;
          case 70: 
            { return CabalTypes.CC_OPTIONS_KEY;
            } 
            // fall through
          case 177: break;
          case 71: 
            { return CabalTypes.MAINTAINER_KEY;
            } 
            // fall through
          case 178: break;
          case 72: 
            { return CabalTypes.BUILD_TYPE_KEY;
            } 
            // fall through
          case 179: break;
          case 73: 
            { return CabalTypes.DATA_FILES_KEY;
            } 
            // fall through
          case 180: break;
          case 74: 
            { return CabalTypes.JS_SOURCES_KEY;
            } 
            // fall through
          case 181: break;
          case 75: 
            { return CabalTypes.TESTED_WITH_KEY;
            } 
            // fall through
          case 182: break;
          case 76: 
            { return CabalTypes.GHC_OPTIONS_KEY;
            } 
            // fall through
          case 183: break;
          case 77: 
            { return CabalTypes.CPP_OPTIONS_KEY;
            } 
            // fall through
          case 184: break;
          case 78: 
            { return CabalTypes.PACKAGE_URL_KEY;
            } 
            // fall through
          case 185: break;
          case 79: 
            { return CabalTypes.BUILD_TOOLS_KEY;
            } 
            // fall through
          case 186: break;
          case 80: 
            { return CabalTypes.BUG_REPORTS_KEY;
            } 
            // fall through
          case 187: break;
          case 81: 
            { return CabalTypes.DESCRIPTION_KEY;
            } 
            // fall through
          case 188: break;
          case 82: 
            { return CabalTypes.INCLUDE_DIRS_KEY;
            } 
            // fall through
          case 189: break;
          case 83: 
            { return CabalTypes.LICENSE_FILE_KEY;
            } 
            // fall through
          case 190: break;
          case 84: 
            { return CabalTypes.HS_SOURCE_DIR_KEY;
            } 
            // fall through
          case 191: break;
          case 85: 
            { return CabalTypes.LICENSE_FILES_KEY;
            } 
            // fall through
          case 192: break;
          case 86: 
            { return CabalTypes.OTHER_MODULES_KEY;
            } 
            // fall through
          case 193: break;
          case 87: 
            { return CabalTypes.CABAL_VERSION_KEY;
            } 
            // fall through
          case 194: break;
          case 88: 
            { return CabalTypes.BUILD_DEPENDS_KEY;
            } 
            // fall through
          case 195: break;
          case 89: 
            { return CabalTypes.HS_SOURCE_DIRS_KEY;
            } 
            // fall through
          case 196: break;
          case 90: 
            { return CabalTypes.EXTRA_LIB_DIRS_KEY;
            } 
            // fall through
          case 197: break;
          case 91: 
            { return CabalTypes.EXTRA_TMP_FILES_KEY;
            } 
            // fall through
          case 198: break;
          case 92: 
            { return CabalTypes.EXTRA_LIBRARIES_KEY;
            } 
            // fall through
          case 199: break;
          case 93: 
            { return CabalTypes.EXTRA_DOC_FILES_KEY;
            } 
            // fall through
          case 200: break;
          case 94: 
            { return CabalTypes.EXPOSED_MODULES_KEY;
            } 
            // fall through
          case 201: break;
          case 95: 
            { return CabalTypes.OTHER_LANGUAGES_KEY;
            } 
            // fall through
          case 202: break;
          case 96: 
            { return CabalTypes.INSTALL_INCLUDES_KEY;
            } 
            // fall through
          case 203: break;
          case 97: 
            { return CabalTypes.GHC_PROF_OPTIONS_KEY;
            } 
            // fall through
          case 204: break;
          case 98: 
            { return CabalTypes.OTHER_EXTENSIONS_KEY;
            } 
            // fall through
          case 205: break;
          case 99: 
            { return CabalTypes.DEFAULT_LANGUAGE_KEY;
            } 
            // fall through
          case 206: break;
          case 100: 
            { return CabalTypes.SOURCE_REPO_KEY;
            } 
            // fall through
          case 207: break;
          case 101: 
            { return CabalTypes.PKGCONFIG_DEPENDS_KEY;
            } 
            // fall through
          case 208: break;
          case 102: 
            { return CabalTypes.REEXPORTED_MODULES_KEY;
            } 
            // fall through
          case 209: break;
          case 103: 
            { return CabalTypes.EXTRA_SOURCE_FILES_KEY;
            } 
            // fall through
          case 210: break;
          case 104: 
            { return CabalTypes.GHC_SHARED_OPTIONS_KEY;
            } 
            // fall through
          case 211: break;
          case 105: 
            { return CabalTypes.DEFAULT_EXTENSIONS_KEY;
            } 
            // fall through
          case 212: break;
          case 106: 
            { return CabalTypes.REQUIRED_SIGNATURES_KEY;
            } 
            // fall through
          case 213: break;
          case 107: 
            { return CabalTypes.EXTRA_GHCI_LIBRARIES_KEY;
            } 
            // fall through
          case 214: break;
          default:
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
